{"version":3,"file":"57f5cc3e-53e1b08ec2c5e1b16bba.js","mappings":"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","sources":["webpack://csv-docs/./node_modules/csv/dist/esm/sync.js"],"sourcesContent":["var global$1 = (typeof global !== \"undefined\" ? global :\n            typeof self !== \"undefined\" ? self :\n            typeof window !== \"undefined\" ? window : {});\n\nvar lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar inited = false;\nfunction init () {\n  inited = true;\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n  for (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i];\n    revLookup[code.charCodeAt(i)] = i;\n  }\n\n  revLookup['-'.charCodeAt(0)] = 62;\n  revLookup['_'.charCodeAt(0)] = 63;\n}\n\nfunction toByteArray (b64) {\n  if (!inited) {\n    init();\n  }\n  var i, j, l, tmp, placeHolders, arr;\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0;\n\n  // base64 is 4/3 + up to two characters of the original data\n  arr = new Arr(len * 3 / 4 - placeHolders);\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len;\n\n  var L = 0;\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)];\n    arr[L++] = (tmp >> 16) & 0xFF;\n    arr[L++] = (tmp >> 8) & 0xFF;\n    arr[L++] = tmp & 0xFF;\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4);\n    arr[L++] = tmp & 0xFF;\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2);\n    arr[L++] = (tmp >> 8) & 0xFF;\n    arr[L++] = tmp & 0xFF;\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp;\n  var output = [];\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2]);\n    output.push(tripletToBase64(tmp));\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  if (!inited) {\n    init();\n  }\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n  var output = '';\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)));\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    output += lookup[tmp >> 2];\n    output += lookup[(tmp << 4) & 0x3F];\n    output += '==';\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1]);\n    output += lookup[tmp >> 10];\n    output += lookup[(tmp >> 4) & 0x3F];\n    output += lookup[(tmp << 2) & 0x3F];\n    output += '=';\n  }\n\n  parts.push(output);\n\n  return parts.join('')\n}\n\nfunction read$1 (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? (nBytes - 1) : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n\n  i += d;\n\n  e = s & ((1 << (-nBits)) - 1);\n  s >>= (-nBits);\n  nBits += eLen;\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1);\n  e >>= (-nBits);\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nfunction write (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0);\n  var i = isLE ? 0 : (nBytes - 1);\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n}\n\nvar toString = {}.toString;\n\nvar isArray$1 = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\nvar INSPECT_MAX_BYTES = 50;\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global$1.TYPED_ARRAY_SUPPORT !== undefined\n  ? global$1.TYPED_ARRAY_SUPPORT\n  : true;\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nkMaxLength();\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length);\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length);\n    }\n    that.length = length;\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192; // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype;\n  return arr\n};\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n};\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype;\n  Buffer.__proto__ = Uint8Array;\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) ;\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size);\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n};\n\nfunction allocUnsafe (that, size) {\n  assertSize(size);\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0;\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n};\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0;\n  that = createBuffer(that, length);\n\n  var actual = that.write(string, encoding);\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual);\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  that = createBuffer(that, length);\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength; // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array);\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset);\n  } else {\n    array = new Uint8Array(array, byteOffset, length);\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array;\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array);\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (internalIsBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    that = createBuffer(that, len);\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len);\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray$1(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\nBuffer.isBuffer = isBuffer$1;\nfunction internalIsBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!internalIsBuffer(a) || !internalIsBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n};\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n};\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray$1(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i;\n  if (length === undefined) {\n    length = 0;\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length);\n  var pos = 0;\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n    if (!internalIsBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n  return buffer\n};\n\nfunction byteLength (string, encoding) {\n  if (internalIsBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string;\n  }\n\n  var len = string.length;\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\nBuffer.byteLength = byteLength;\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false;\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0;\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0;\n  start >>>= 0;\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true;\n\nfunction swap (b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length;\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n  return this\n};\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length;\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n  return this\n};\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length;\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n  return this\n};\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0;\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n};\n\nBuffer.prototype.equals = function equals (b) {\n  if (!internalIsBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n};\n\nBuffer.prototype.inspect = function inspect () {\n  var str = '';\n  var max = INSPECT_MAX_BYTES;\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n    if (this.length > max) str += ' ... ';\n  }\n  return '<Buffer ' + str + '>'\n};\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!internalIsBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0;\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart;\n  var y = end - start;\n  var len = Math.min(x, y);\n\n  var thisCopy = this.slice(thisStart, thisEnd);\n  var targetCopy = target.slice(start, end);\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n};\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n  byteOffset = +byteOffset;  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1);\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (internalIsBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1;\n  var arrLength = arr.length;\n  var valLength = val.length;\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i;\n  if (dir) {\n    var foundIndex = -1;\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true;\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n};\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n};\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n    if (length > remaining) {\n      length = remaining;\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length;\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed;\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0;\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0;\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0;\n    if (isFinite(length)) {\n      length = length | 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n};\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return fromByteArray(buf)\n  } else {\n    return fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n\n  var i = start;\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1;\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1];\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F);\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F);\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F);\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length;\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = '';\n  var i = 0;\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    );\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length;\n\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n\n  var out = '';\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i]);\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n\n  if (end < start) end = start;\n\n  var newBuf;\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end);\n    newBuf.__proto__ = Buffer.prototype;\n  } else {\n    var sliceLen = end - start;\n    newBuf = new Buffer(sliceLen, undefined);\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start];\n    }\n  }\n\n  return newBuf\n};\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  return val\n};\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n\n  var val = this[offset + --byteLength];\n  var mul = 1;\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n\n  return val\n};\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset]\n};\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | (this[offset + 1] << 8)\n};\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return (this[offset] << 8) | this[offset + 1]\n};\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n};\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n};\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n  mul *= 0x80;\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n  return val\n};\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n  mul *= 0x80;\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n  return val\n};\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n};\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | (this[offset + 1] << 8);\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n};\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | (this[offset] << 8);\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n};\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n};\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n};\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return read$1(this, offset, true, 23, 4)\n};\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return read$1(this, offset, false, 23, 4)\n};\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return read$1(this, offset, true, 52, 8)\n};\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return read$1(this, offset, false, 52, 8)\n};\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!internalIsBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  this[offset] = (value & 0xff);\n  return offset + 1\n};\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1;\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8;\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8);\n    this[offset + 1] = (value & 0xff);\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n  return offset + 2\n};\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1;\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff;\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24);\n    this[offset + 2] = (value >>> 16);\n    this[offset + 1] = (value >>> 8);\n    this[offset] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24);\n    this[offset + 1] = (value >>> 16);\n    this[offset + 2] = (value >>> 8);\n    this[offset + 3] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = (value & 0xff);\n  return offset + 1\n};\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8);\n    this[offset + 1] = (value & 0xff);\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n    this[offset + 2] = (value >>> 16);\n    this[offset + 3] = (value >>> 24);\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24);\n    this[offset + 1] = (value >>> 16);\n    this[offset + 2] = (value >>> 8);\n    this[offset + 3] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n  return offset + 4\n};\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4);\n  }\n  write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n};\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n};\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8);\n  }\n  write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n};\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n};\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start;\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length;\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n\n  var len = end - start;\n  var i;\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    );\n  }\n\n  return len\n};\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n      if (code < 256) {\n        val = code;\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n\n  if (!val) val = 0;\n\n  var i;\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = internalIsBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString());\n    var len = bytes.length;\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n\n  return this\n};\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '');\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i);\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint;\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null;\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      );\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      );\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      );\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n\n  return byteArray\n}\n\n\nfunction base64ToBytes (str) {\n  return toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i];\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n// the following is from is-buffer, also by Feross Aboukhadijeh and with same lisence\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nfunction isBuffer$1(obj) {\n  return obj != null && (!!obj._isBuffer || isFastBuffer(obj) || isSlowBuffer(obj))\n}\n\nfunction isFastBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isFastBuffer(obj.slice(0, 0))\n}\n\nvar domain;\n\n// This constructor is used to store event handlers. Instantiating this is\n// faster than explicitly calling `Object.create(null)` to get a \"clean\" empty\n// object (tested with v8 v4.9).\nfunction EventHandlers() {}\nEventHandlers.prototype = Object.create(null);\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\n\n// nodejs oddity\n// require('events') === require('events').EventEmitter\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.usingDomains = false;\n\nEventEmitter.prototype.domain = undefined;\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\nEventEmitter.init = function() {\n  this.domain = null;\n  if (EventEmitter.usingDomains) {\n    // if there is an active domain, then attach to it.\n    if (domain.active ) ;\n  }\n\n  if (!this._events || this._events === Object.getPrototypeOf(this)._events) {\n    this._events = new EventHandlers();\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || isNaN(n))\n    throw new TypeError('\"n\" argument must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n  if (isFn)\n    handler.call(self);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self);\n  }\n}\nfunction emitOne(handler, isFn, self, arg1) {\n  if (isFn)\n    handler.call(self, arg1);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1);\n  }\n}\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n  if (isFn)\n    handler.call(self, arg1, arg2);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2);\n  }\n}\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n  if (isFn)\n    handler.call(self, arg1, arg2, arg3);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2, arg3);\n  }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n  if (isFn)\n    handler.apply(self, args);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].apply(self, args);\n  }\n}\n\nEventEmitter.prototype.emit = function emit(type) {\n  var er, handler, len, args, i, events, domain;\n  var doError = (type === 'error');\n\n  events = this._events;\n  if (events)\n    doError = (doError && events.error == null);\n  else if (!doError)\n    return false;\n\n  domain = this.domain;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    er = arguments[1];\n    if (domain) {\n      if (!er)\n        er = new Error('Uncaught, unspecified \"error\" event');\n      er.domainEmitter = this;\n      er.domain = domain;\n      er.domainThrown = false;\n      domain.emit('error', er);\n    } else if (er instanceof Error) {\n      throw er; // Unhandled 'error' event\n    } else {\n      // At least give some kind of context to the user\n      var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n      err.context = er;\n      throw err;\n    }\n    return false;\n  }\n\n  handler = events[type];\n\n  if (!handler)\n    return false;\n\n  var isFn = typeof handler === 'function';\n  len = arguments.length;\n  switch (len) {\n    // fast cases\n    case 1:\n      emitNone(handler, isFn, this);\n      break;\n    case 2:\n      emitOne(handler, isFn, this, arguments[1]);\n      break;\n    case 3:\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n      break;\n    case 4:\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n      break;\n    // slower\n    default:\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n      emitMany(handler, isFn, this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n\n  events = target._events;\n  if (!events) {\n    events = target._events = new EventHandlers();\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (!existing) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] = prepend ? [listener, existing] :\n                                          [existing, listener];\n    } else {\n      // If we've already got an array, just append.\n      if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n    }\n\n    // Check for listener leak\n    if (!existing.warned) {\n      m = $getMaxListeners(target);\n      if (m && m > 0 && existing.length > m) {\n        existing.warned = true;\n        var w = new Error('Possible EventEmitter memory leak detected. ' +\n                            existing.length + ' ' + type + ' listeners added. ' +\n                            'Use emitter.setMaxListeners() to increase limit');\n        w.name = 'MaxListenersExceededWarning';\n        w.emitter = target;\n        w.type = type;\n        w.count = existing.length;\n        emitWarning(w);\n      }\n    }\n  }\n\n  return target;\n}\nfunction emitWarning(e) {\n  typeof console.warn === 'function' ? console.warn(e) : console.log(e);\n}\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction _onceWrap(target, type, listener) {\n  var fired = false;\n  function g() {\n    target.removeListener(type, g);\n    if (!fired) {\n      fired = true;\n      listener.apply(target, arguments);\n    }\n  }\n  g.listener = listener;\n  return g;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      list = events[type];\n      if (!list)\n        return this;\n\n      if (list === listener || (list.listener && list.listener === listener)) {\n        if (--this._eventsCount === 0)\n          this._events = new EventHandlers();\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length; i-- > 0;) {\n          if (list[i] === listener ||\n              (list[i].listener && list[i].listener === listener)) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (list.length === 1) {\n          list[0] = undefined;\n          if (--this._eventsCount === 0) {\n            this._events = new EventHandlers();\n            return this;\n          } else {\n            delete events[type];\n          }\n        } else {\n          spliceOne(list, position);\n        }\n\n        if (events.removeListener)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events;\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (!events.removeListener) {\n        if (arguments.length === 0) {\n          this._events = new EventHandlers();\n          this._eventsCount = 0;\n        } else if (events[type]) {\n          if (--this._eventsCount === 0)\n            this._events = new EventHandlers();\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        for (var i = 0, key; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = new EventHandlers();\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners) {\n        // LIFO order\n        do {\n          this.removeListener(type, listeners[listeners.length - 1]);\n        } while (listeners[0]);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  var evlistener;\n  var ret;\n  var events = this._events;\n\n  if (!events)\n    ret = [];\n  else {\n    evlistener = events[type];\n    if (!evlistener)\n      ret = [];\n    else if (typeof evlistener === 'function')\n      ret = [evlistener.listener || evlistener];\n    else\n      ret = unwrapListeners(evlistener);\n  }\n\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount$1.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount$1;\nfunction listenerCount$1(type) {\n  var events = this._events;\n\n  if (events) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n};\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\n    list[i] = list[k];\n  list.pop();\n}\n\nfunction arrayClone(arr, i) {\n  var copy = new Array(i);\n  while (i--)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\n// shim for using process in browser\n// based off https://github.com/defunctzombie/node-process/blob/master/browser.js\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\nvar cachedSetTimeout = defaultSetTimout;\nvar cachedClearTimeout = defaultClearTimeout;\nif (typeof global$1.setTimeout === 'function') {\n    cachedSetTimeout = setTimeout;\n}\nif (typeof global$1.clearTimeout === 'function') {\n    cachedClearTimeout = clearTimeout;\n}\n\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\nfunction nextTick(fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n}\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nvar title = 'browser';\nvar platform = 'browser';\nvar browser = true;\nvar env = {};\nvar argv = [];\nvar version = ''; // empty string to avoid regexp issues\nvar versions = {};\nvar release = {};\nvar config = {};\n\nfunction noop() {}\n\nvar on = noop;\nvar addListener = noop;\nvar once = noop;\nvar off = noop;\nvar removeListener = noop;\nvar removeAllListeners = noop;\nvar emit = noop;\n\nfunction binding(name) {\n    throw new Error('process.binding is not supported');\n}\n\nfunction cwd () { return '/' }\nfunction chdir (dir) {\n    throw new Error('process.chdir is not supported');\n}function umask() { return 0; }\n\n// from https://github.com/kumavis/browser-process-hrtime/blob/master/index.js\nvar performance = global$1.performance || {};\nvar performanceNow =\n  performance.now        ||\n  performance.mozNow     ||\n  performance.msNow      ||\n  performance.oNow       ||\n  performance.webkitNow  ||\n  function(){ return (new Date()).getTime() };\n\n// generate timestamp or delta\n// see http://nodejs.org/api/process.html#process_process_hrtime\nfunction hrtime(previousTimestamp){\n  var clocktime = performanceNow.call(performance)*1e-3;\n  var seconds = Math.floor(clocktime);\n  var nanoseconds = Math.floor((clocktime%1)*1e9);\n  if (previousTimestamp) {\n    seconds = seconds - previousTimestamp[0];\n    nanoseconds = nanoseconds - previousTimestamp[1];\n    if (nanoseconds<0) {\n      seconds--;\n      nanoseconds += 1e9;\n    }\n  }\n  return [seconds,nanoseconds]\n}\n\nvar startTime = new Date();\nfunction uptime() {\n  var currentTime = new Date();\n  var dif = currentTime - startTime;\n  return dif / 1000;\n}\n\nvar process = {\n  nextTick: nextTick,\n  title: title,\n  browser: browser,\n  env: env,\n  argv: argv,\n  version: version,\n  versions: versions,\n  on: on,\n  addListener: addListener,\n  once: once,\n  off: off,\n  removeListener: removeListener,\n  removeAllListeners: removeAllListeners,\n  emit: emit,\n  binding: binding,\n  cwd: cwd,\n  chdir: chdir,\n  umask: umask,\n  hrtime: hrtime,\n  platform: platform,\n  release: release,\n  config: config,\n  uptime: uptime\n};\n\nvar inherits;\nif (typeof Object.create === 'function'){\n  inherits = function inherits(ctor, superCtor) {\n    // implementation from standard node.js 'util' module\n    ctor.super_ = superCtor;\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  inherits = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  };\n}\nvar inherits$1 = inherits;\n\nvar formatRegExp = /%[sdj%]/g;\nfunction format(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n}\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nfunction deprecate(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global$1.process)) {\n    return function() {\n      return deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\nvar debugs = {};\nvar debugEnviron;\nfunction debuglog(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = 0;\n      debugs[set] = function() {\n        var msg = format.apply(null, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n}\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    _extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var length = output.reduce(function(prev, cur) {\n    if (cur.indexOf('\\n') >= 0) ;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\n\nfunction isNull(arg) {\n  return arg === null;\n}\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\n\nfunction isSymbol$1(arg) {\n  return typeof arg === 'symbol';\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\n\nfunction isBuffer(maybeBuf) {\n  return isBuffer$1(maybeBuf);\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nfunction log() {\n  console.log('%s - %s', timestamp(), format.apply(null, arguments));\n}\n\nfunction _extend(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n}\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar util = {\n  inherits: inherits$1,\n  _extend: _extend,\n  log: log,\n  isBuffer: isBuffer,\n  isPrimitive: isPrimitive,\n  isFunction: isFunction,\n  isError: isError,\n  isDate: isDate,\n  isObject: isObject,\n  isRegExp: isRegExp,\n  isUndefined: isUndefined,\n  isSymbol: isSymbol$1,\n  isString: isString,\n  isNumber: isNumber,\n  isNullOrUndefined: isNullOrUndefined,\n  isNull: isNull,\n  isBoolean: isBoolean,\n  isArray: isArray,\n  inspect: inspect,\n  deprecate: deprecate,\n  format: format,\n  debuglog: debuglog\n};\n\nfunction BufferList() {\n  this.head = null;\n  this.tail = null;\n  this.length = 0;\n}\n\nBufferList.prototype.push = function (v) {\n  var entry = { data: v, next: null };\n  if (this.length > 0) this.tail.next = entry;else this.head = entry;\n  this.tail = entry;\n  ++this.length;\n};\n\nBufferList.prototype.unshift = function (v) {\n  var entry = { data: v, next: this.head };\n  if (this.length === 0) this.tail = entry;\n  this.head = entry;\n  ++this.length;\n};\n\nBufferList.prototype.shift = function () {\n  if (this.length === 0) return;\n  var ret = this.head.data;\n  if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n  --this.length;\n  return ret;\n};\n\nBufferList.prototype.clear = function () {\n  this.head = this.tail = null;\n  this.length = 0;\n};\n\nBufferList.prototype.join = function (s) {\n  if (this.length === 0) return '';\n  var p = this.head;\n  var ret = '' + p.data;\n  while (p = p.next) {\n    ret += s + p.data;\n  }return ret;\n};\n\nBufferList.prototype.concat = function (n) {\n  if (this.length === 0) return Buffer.alloc(0);\n  if (this.length === 1) return this.head.data;\n  var ret = Buffer.allocUnsafe(n >>> 0);\n  var p = this.head;\n  var i = 0;\n  while (p) {\n    p.data.copy(ret, i);\n    i += p.data.length;\n    p = p.next;\n  }\n  return ret;\n};\n\n// Copyright Joyent, Inc. and other Node contributors.\nvar isBufferEncoding = Buffer.isEncoding\n  || function(encoding) {\n       switch (encoding && encoding.toLowerCase()) {\n         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n         default: return false;\n       }\n     };\n\n\nfunction assertEncoding(encoding) {\n  if (encoding && !isBufferEncoding(encoding)) {\n    throw new Error('Unknown encoding: ' + encoding);\n  }\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters. CESU-8 is handled as part of the UTF-8 encoding.\n//\n// @TODO Handling all encodings inside a single object makes it very difficult\n// to reason about this code, so it should be split up in the future.\n// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n// points as used by CESU-8.\nfunction StringDecoder(encoding) {\n  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n  assertEncoding(encoding);\n  switch (this.encoding) {\n    case 'utf8':\n      // CESU-8 represents each of Surrogate Pair by 3-bytes\n      this.surrogateSize = 3;\n      break;\n    case 'ucs2':\n    case 'utf16le':\n      // UTF-16 represents each of Surrogate Pair by 2-bytes\n      this.surrogateSize = 2;\n      this.detectIncompleteChar = utf16DetectIncompleteChar;\n      break;\n    case 'base64':\n      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n      this.surrogateSize = 3;\n      this.detectIncompleteChar = base64DetectIncompleteChar;\n      break;\n    default:\n      this.write = passThroughWrite;\n      return;\n  }\n\n  // Enough space to store all bytes of a single character. UTF-8 needs 4\n  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n  this.charBuffer = new Buffer(6);\n  // Number of bytes received for the current incomplete multi-byte character.\n  this.charReceived = 0;\n  // Number of bytes expected for the current incomplete multi-byte character.\n  this.charLength = 0;\n}\n\n// write decodes the given buffer and returns it as JS string that is\n// guaranteed to not contain any partial multi-byte characters. Any partial\n// character found at the end of the buffer is buffered up, and will be\n// returned when calling write again with the remaining bytes.\n//\n// Note: Converting a Buffer containing an orphan surrogate to a String\n// currently works, but converting a String to a Buffer (via `new Buffer`, or\n// Buffer#write) will replace incomplete surrogates with the unicode\n// replacement character. See https://codereview.chromium.org/121173009/ .\nStringDecoder.prototype.write = function(buffer) {\n  var charStr = '';\n  // if our last write ended with an incomplete multibyte character\n  while (this.charLength) {\n    // determine how many remaining bytes this buffer has to offer for this char\n    var available = (buffer.length >= this.charLength - this.charReceived) ?\n        this.charLength - this.charReceived :\n        buffer.length;\n\n    // add the new bytes to the char buffer\n    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n    this.charReceived += available;\n\n    if (this.charReceived < this.charLength) {\n      // still not enough chars in this buffer? wait for more ...\n      return '';\n    }\n\n    // remove bytes belonging to the current character from the buffer\n    buffer = buffer.slice(available, buffer.length);\n\n    // get the character that was split\n    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\n    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n    var charCode = charStr.charCodeAt(charStr.length - 1);\n    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n      this.charLength += this.surrogateSize;\n      charStr = '';\n      continue;\n    }\n    this.charReceived = this.charLength = 0;\n\n    // if there are no more bytes in this buffer, just emit our char\n    if (buffer.length === 0) {\n      return charStr;\n    }\n    break;\n  }\n\n  // determine and set charLength / charReceived\n  this.detectIncompleteChar(buffer);\n\n  var end = buffer.length;\n  if (this.charLength) {\n    // buffer the incomplete character bytes we got\n    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n    end -= this.charReceived;\n  }\n\n  charStr += buffer.toString(this.encoding, 0, end);\n\n  var end = charStr.length - 1;\n  var charCode = charStr.charCodeAt(end);\n  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n    var size = this.surrogateSize;\n    this.charLength += size;\n    this.charReceived += size;\n    this.charBuffer.copy(this.charBuffer, size, 0, size);\n    buffer.copy(this.charBuffer, 0, 0, size);\n    return charStr.substring(0, end);\n  }\n\n  // or just emit the charStr\n  return charStr;\n};\n\n// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n// the end of the given buffer. If so, it sets this.charLength to the byte\n// length that character, and sets this.charReceived to the number of bytes\n// that are available for this character.\nStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n  // determine how many bytes we have to check at the end of this buffer\n  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\n  // Figure out if one of the last i bytes of our buffer announces an\n  // incomplete char.\n  for (; i > 0; i--) {\n    var c = buffer[buffer.length - i];\n\n    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\n    // 110XXXXX\n    if (i == 1 && c >> 5 == 0x06) {\n      this.charLength = 2;\n      break;\n    }\n\n    // 1110XXXX\n    if (i <= 2 && c >> 4 == 0x0E) {\n      this.charLength = 3;\n      break;\n    }\n\n    // 11110XXX\n    if (i <= 3 && c >> 3 == 0x1E) {\n      this.charLength = 4;\n      break;\n    }\n  }\n  this.charReceived = i;\n};\n\nStringDecoder.prototype.end = function(buffer) {\n  var res = '';\n  if (buffer && buffer.length)\n    res = this.write(buffer);\n\n  if (this.charReceived) {\n    var cr = this.charReceived;\n    var buf = this.charBuffer;\n    var enc = this.encoding;\n    res += buf.slice(0, cr).toString(enc);\n  }\n\n  return res;\n};\n\nfunction passThroughWrite(buffer) {\n  return buffer.toString(this.encoding);\n}\n\nfunction utf16DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 2;\n  this.charLength = this.charReceived ? 2 : 0;\n}\n\nfunction base64DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 3;\n  this.charLength = this.charReceived ? 3 : 0;\n}\n\nReadable.ReadableState = ReadableState;\n\nvar debug = debuglog('stream');\ninherits$1(Readable, EventEmitter);\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') {\n    return emitter.prependListener(event, fn);\n  } else {\n    // This is a hack to make sure that our error handler is attached before any\n    // userland ones.  NEVER DO THIS. This is here only because this code needs\n    // to continue to work with older versions of Node.js that do not include\n    // the prependListener() method. The goal is to eventually remove this hack.\n    if (!emitter._events || !emitter._events[event])\n      emitter.on(event, fn);\n    else if (Array.isArray(emitter._events[event]))\n      emitter._events[event].unshift(fn);\n    else\n      emitter._events[event] = [fn, emitter._events[event]];\n  }\n}\nfunction listenerCount (emitter, type) {\n  return emitter.listeners(type).length;\n}\nfunction ReadableState(options, stream) {\n\n  options = options || {};\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~ ~this.highWaterMark;\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // when piping, we only care about 'readable' events that happen\n  // after read()ing all the bytes and not getting any pushback.\n  this.ranOut = false;\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\nfunction Readable(options) {\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options && typeof options.read === 'function') this._read = options.read;\n\n  EventEmitter.call(this);\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n\n  if (!state.objectMode && typeof chunk === 'string') {\n    encoding = encoding || state.defaultEncoding;\n    if (encoding !== state.encoding) {\n      chunk = Buffer.from(chunk, encoding);\n      encoding = '';\n    }\n  }\n\n  return readableAddChunk(this, state, chunk, encoding, false);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  var state = this._readableState;\n  return readableAddChunk(this, state, chunk, '', true);\n};\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\nfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n  var er = chunkInvalid(state, chunk);\n  if (er) {\n    stream.emit('error', er);\n  } else if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else if (state.objectMode || chunk && chunk.length > 0) {\n    if (state.ended && !addToFront) {\n      var e = new Error('stream.push() after EOF');\n      stream.emit('error', e);\n    } else if (state.endEmitted && addToFront) {\n      var _e = new Error('stream.unshift() after end event');\n      stream.emit('error', _e);\n    } else {\n      var skipAdd;\n      if (state.decoder && !addToFront && !encoding) {\n        chunk = state.decoder.write(chunk);\n        skipAdd = !state.objectMode && chunk.length === 0;\n      }\n\n      if (!addToFront) state.reading = false;\n\n      // Don't add to the buffer if we've decoded to an empty string chunk and\n      // we're not in object mode\n      if (!skipAdd) {\n        // if we want the data now, just emit it.\n        if (state.flowing && state.length === 0 && !state.sync) {\n          stream.emit('data', chunk);\n          stream.read(0);\n        } else {\n          // update the buffer info.\n          state.length += state.objectMode ? 1 : chunk.length;\n          if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n          if (state.needReadable) emitReadable(stream);\n        }\n      }\n\n      maybeReadMore(stream, state);\n    }\n  } else if (!addToFront) {\n    state.reading = false;\n  }\n\n  return needMoreData(state);\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction chunkInvalid(state, chunk) {\n  var er = null;\n  if (!isBuffer$1(chunk) && typeof chunk !== 'string' && chunk !== null && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false);\n\n  var endFn = doEnd ? onend : cleanup;\n  if (state.endEmitted) nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable) {\n    debug('onunpipe');\n    if (readable === src) {\n      cleanup();\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', cleanup);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (listenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && src.listeners('data').length) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var _i = 0; _i < len; _i++) {\n      dests[_i].emit('unpipe', this);\n    }return this;\n  }\n\n  // try to find the right one.\n  var i = indexOf(state.pipes, dest);\n  if (i === -1) return this;\n\n  state.pipes.splice(i, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = EventEmitter.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n  forEach(events, function (ev) {\n    stream.on(ev, self.emit.bind(self, ev));\n  });\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction forEach(xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n\n// A bit simpler than readable streams.\nWritable.WritableState = WritableState;\ninherits$1(Writable, EventEmitter);\n\nfunction nop() {}\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\nfunction WritableState(options, stream) {\n  Object.defineProperty(this, 'buffer', {\n    get: deprecate(function () {\n      return this.getBuffer();\n    }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.')\n  });\n  options = options || {};\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~ ~this.highWaterMark;\n\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function writableStateGetBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\nfunction Writable(options) {\n\n  // Writable ctor is applied to Duplexes, though they're not\n  // instanceof Writable, they're instanceof Readable.\n  if (!(this instanceof Writable) && !(this instanceof Duplex)) return new Writable(options);\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n  }\n\n  EventEmitter.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  nextTick(cb, er);\n}\n\n// If we get something that is not a buffer, string, null, or undefined,\n// and we're not in objectMode, then that's an error.\n// Otherwise stream chunks are all considered to be of length=1, and the\n// watermarks determine how many objects to keep in the buffer, rather than\n// how many bytes or characters.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n  // Always throw error if a null is written\n  // if we are not in object mode then throw\n  // if it is not a buffer, string, or undefined.\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (Buffer.isBuffer(chunk)) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n  chunk = decodeChunk(state, chunk, encoding);\n\n  if (Buffer.isBuffer(chunk)) encoding = 'buffer';\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = new WriteReq(chunk, encoding, cb);\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync) nextTick(cb, er);else cb(er);\n\n  stream._writableState.errorEmitted = true;\n  stream.emit('error', er);\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n        nextTick(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n        afterWrite(stream, state, finished, cb);\n      }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    while (entry) {\n      buffer[count] = entry;\n      entry = entry.next;\n      count += 1;\n    }\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequestCount = 0;\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished) {\n    state.prefinished = true;\n    stream.emit('prefinish');\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    if (state.pendingcb === 0) {\n      prefinish(stream, state);\n      state.finished = true;\n      stream.emit('finish');\n    } else {\n      prefinish(stream, state);\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function (err) {\n    var entry = _this.entry;\n    _this.entry = null;\n    while (entry) {\n      var cb = entry.callback;\n      state.pendingcb--;\n      cb(err);\n      entry = entry.next;\n    }\n    if (state.corkedRequestsFree) {\n      state.corkedRequestsFree.next = _this;\n    } else {\n      state.corkedRequestsFree = _this;\n    }\n  };\n}\n\ninherits$1(Duplex, Readable);\n\nvar keys = Object.keys(Writable.prototype);\nfor (var v = 0; v < keys.length; v++) {\n  var method = keys[v];\n  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n}\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\n// a transform stream is a readable/writable stream where you do\ninherits$1(Transform, Duplex);\n\nfunction TransformState(stream) {\n  this.afterTransform = function (er, data) {\n    return afterTransform(stream, er, data);\n  };\n\n  this.needTransform = false;\n  this.transforming = false;\n  this.writecb = null;\n  this.writechunk = null;\n  this.writeencoding = null;\n}\n\nfunction afterTransform(stream, er, data) {\n  var ts = stream._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) return stream.emit('error', new Error('no writecb in Transform class'));\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data !== null && data !== undefined) stream.push(data);\n\n  cb(er);\n\n  var rs = stream._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    stream._read(rs.highWaterMark);\n  }\n}\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = new TransformState(this);\n\n  // when the writable side finishes, then flush out anything remaining.\n  var stream = this;\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  this.once('prefinish', function () {\n    if (typeof this._flush === 'function') this._flush(function (er) {\n      done(stream, er);\n    });else done(stream);\n  });\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('Not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nfunction done(stream, er) {\n  if (er) return stream.emit('error', er);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  var ws = stream._writableState;\n  var ts = stream._transformState;\n\n  if (ws.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (ts.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}\n\ninherits$1(PassThrough, Transform);\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};\n\ninherits$1(Stream, EventEmitter);\nStream.Readable = Readable;\nStream.Writable = Writable;\nStream.Duplex = Duplex;\nStream.Transform = Transform;\nStream.PassThrough = PassThrough;\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EventEmitter.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EventEmitter.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n\nconst init_state$1 = (options) => {\n  // State\n  return {\n    start_time: options.duration ? Date.now() : null,\n    fixed_size_buffer: '',\n    count_written: 0,\n    count_created: 0,\n  };\n};\n\n// Generate a random number between 0 and 1 with 2 decimals. The function is idempotent if it detect the \"seed\" option.\nconst random = function(options={}){\n  if(options.seed){\n    return options.seed = options.seed * Math.PI * 100 % 100 / 100;\n  }else {\n    return Math.random();\n  }\n};\n\nconst types = {\n  // Generate an ASCII value.\n  ascii: function({options}){\n    const column = [];\n    const nb_chars = Math.ceil(random(options) * options.maxWordLength);\n    for(let i=0; i<nb_chars; i++){\n      const char = Math.floor(random(options) * 32);\n      column.push(String.fromCharCode(char + (char < 16 ? 65 : 97 - 16)));\n    }\n    return column.join('');\n  },\n  // Generate an integer value.\n  int: function({options}){\n    return Math.floor(random(options) * Math.pow(2, 52));\n  },\n  // Generate an boolean value.\n  bool: function({options}){\n    return Math.floor(random(options) * 2);\n  }\n};\n\nconst camelize = function(str){\n  return str.replace(/_([a-z])/gi, function(_, match){\n    return match.toUpperCase();\n  });\n};\n\nconst normalize_options$2 = (opts) => {\n  // Convert Stream Readable options if underscored\n  if(opts.high_water_mark){\n    opts.highWaterMark = opts.high_water_mark;\n  }\n  if(opts.object_mode){\n    opts.objectMode = opts.object_mode;\n  }\n  // Clone and camelize options\n  const options = {};\n  for(const k in opts){\n    options[camelize(k)] = opts[k];\n  }\n  // Normalize options\n  const dft = {\n    columns: 8,\n    delimiter: ',',\n    duration: null,\n    encoding: null,\n    end: null,\n    eof: false,\n    fixedSize: false,\n    length: -1,\n    maxWordLength: 16,\n    rowDelimiter: '\\n',\n    seed: false,\n    sleep: 0,\n  };\n  for(const k in dft){\n    if(options[k] === undefined){\n      options[k] = dft[k];\n    }\n  }\n  // Default values\n  if(options.eof === true){\n    options.eof = options.rowDelimiter;\n  }\n  if(typeof options.columns === 'number'){\n    options.columns = new Array(options.columns);\n  }\n  const accepted_header_types = Object.keys(types).filter((t) => (!['super_', 'camelize'].includes(t)));\n  for(let i = 0; i < options.columns.length; i++){\n    const v = options.columns[i] || 'ascii';\n    if(typeof v === 'string'){\n      if(!accepted_header_types.includes(v)){\n        throw Error(`Invalid column type: got \"${v}\", default values are ${JSON.stringify(accepted_header_types)}`);\n      }\n      options.columns[i] = types[v];\n    }\n  }\n  return options;\n};\n\nconst read = (options, state, size, push, close) => {\n  // Already started\n  const data = [];\n  let length = state.fixed_size_buffer.length;\n  if(length !== 0){\n    data.push(state.fixed_size_buffer);\n  }\n  // eslint-disable-next-line\n  while(true){\n    // Time for some rest: flush first and stop later\n    if((state.count_created === options.length) || (options.end && Date.now() > options.end) || (options.duration && Date.now() > state.start_time + options.duration)){\n      // Flush\n      if(data.length){\n        if(options.objectMode){\n          for(const record of data){\n            push(record);\n          }\n        }else {\n          push(data.join('') + (options.eof ? options.eof : ''));\n        }\n        state.end = true;\n      }else {\n        close();\n      }\n      return;\n    }\n    // Create the record\n    let record = [];\n    let recordLength;\n    for(const fn of options.columns){\n      const result = fn({options: options, state: state});\n      const type = typeof result;\n      if(result !== null && type !== 'string' && type !== 'number'){\n        return Error([\n          'INVALID_VALUE:',\n          'values returned by column function must be',\n          'a string, a number or null,',\n          `got ${JSON.stringify(result)}`\n        ].join(' '));\n      }\n      record.push(result);\n    }\n    // Obtain record length\n    if(options.objectMode){\n      recordLength = 0;\n      // recordLength is currently equal to the number of columns\n      // This is wrong and shall equal to 1 record only\n      for(const column of record){\n        recordLength += column.length;\n      }\n    }else {\n      // Stringify the record\n      record = (state.count_created === 0 ? '' : options.rowDelimiter)+record.join(options.delimiter);\n      recordLength = record.length;\n    }\n    state.count_created++;\n    if(length + recordLength > size){\n      if(options.objectMode){\n        data.push(record);\n        for(const record of data){\n          push(record);\n        }\n      }else {\n        if(options.fixedSize){\n          state.fixed_size_buffer = record.substr(size - length);\n          data.push(record.substr(0, size - length));\n        }else {\n          data.push(record);\n        }\n        push(data.join(''));\n      }\n      return;\n    }\n    length += recordLength;\n    data.push(record);\n  }\n};\n\nconst Generator = function(options = {}){\n  this.options = normalize_options$2(options);\n  // Call parent constructor\n  Stream.Readable.call(this, this.options);\n  this.state = init_state$1(this.options);\n  return this;\n};\nutil.inherits(Generator, Stream.Readable);\n\n// Stop the generation.\nGenerator.prototype.end = function(){\n  this.push(null);\n};\n// Put new data into the read queue.\nGenerator.prototype._read = function(size){\n  const self = this;\n  const err = read(this.options, this.state, size, function(chunk) {\n    self.__push(chunk);\n  }, function(){\n    self.push(null);\n  });\n  if(err){\n    this.destroy(err);\n  }\n};\n// Put new data into the read queue.\nGenerator.prototype.__push = function(record){\n  // console.log('push', record)\n  const push = () => {\n    this.state.count_written++;\n    this.push(record);\n    if(this.state.end === true){\n      return this.push(null);\n    }\n  };\n  this.options.sleep > 0 ? setTimeout(push, this.options.sleep) : push();\n};\n\nconst generate = function(options){\n  if(typeof options === 'string' && /\\d+/.test(options)){\n    options = parseInt(options);\n  }\n  if(Number.isInteger(options)){\n    options = {length: options};\n  }else if(typeof options !== 'object' || options === null){\n    throw Error('Invalid Argument: options must be an object or an integer');\n  }\n  if(!Number.isInteger(options.length)){\n    throw Error('Invalid Argument: length is not defined');\n  }\n  const chunks = [];\n  let work = true;\n  // See https://nodejs.org/api/stream.html#stream_new_stream_readable_options\n  options.highWaterMark = options.objectMode ? 16 : 16384;\n  const generator = new Generator(options);\n  generator.push = function(chunk){\n    if(chunk === null){\n      return work = false; \n    }\n    if(options.objectMode){\n      chunks.push(chunk);\n    }else {\n      chunks.push(chunk);  \n    }\n  };\n  while(work){\n    generator._read(options.highWaterMark);\n  }\n  if(!options.objectMode){\n    return chunks.join('');\n  }else {\n    return chunks;\n  }\n};\n\nlet CsvError$1 = class CsvError extends Error {\n  constructor(code, message, options, ...contexts) {\n    if(Array.isArray(message)) message = message.join(' ').trim();\n    super(message);\n    if(Error.captureStackTrace !== undefined){\n      Error.captureStackTrace(this, CsvError$1);\n    }\n    this.code = code;\n    for(const context of contexts){\n      for(const key in context){\n        const value = context[key];\n        this[key] = isBuffer$1(value) ? value.toString(options.encoding) : value == null ? value : JSON.parse(JSON.stringify(value));\n      }\n    }\n  }\n};\n\nconst is_object$1 = function(obj){\n  return (typeof obj === 'object' && obj !== null && !Array.isArray(obj));\n};\n\nconst normalize_columns_array = function(columns){\n  const normalizedColumns = [];\n  for(let i = 0, l = columns.length; i < l; i++){\n    const column = columns[i];\n    if(column === undefined || column === null || column === false){\n      normalizedColumns[i] = { disabled: true };\n    }else if(typeof column === 'string'){\n      normalizedColumns[i] = { name: column };\n    }else if(is_object$1(column)){\n      if(typeof column.name !== 'string'){\n        throw new CsvError$1('CSV_OPTION_COLUMNS_MISSING_NAME', [\n          'Option columns missing name:',\n          `property \"name\" is required at position ${i}`,\n          'when column is an object literal'\n        ]);\n      }\n      normalizedColumns[i] = column;\n    }else {\n      throw new CsvError$1('CSV_INVALID_COLUMN_DEFINITION', [\n        'Invalid column definition:',\n        'expect a string or a literal object,',\n        `got ${JSON.stringify(column)} at position ${i}`\n      ]);\n    }\n  }\n  return normalizedColumns;\n};\n\nclass ResizeableBuffer{\n  constructor(size=100){\n    this.size = size;\n    this.length = 0;\n    this.buf = Buffer.allocUnsafe(size);\n  }\n  prepend(val){\n    if(isBuffer$1(val)){\n      const length = this.length + val.length;\n      if(length >= this.size){\n        this.resize();\n        if(length >= this.size){\n          throw Error('INVALID_BUFFER_STATE');\n        }\n      }\n      const buf = this.buf;\n      this.buf = Buffer.allocUnsafe(this.size);\n      val.copy(this.buf, 0);\n      buf.copy(this.buf, val.length);\n      this.length += val.length;\n    }else {\n      const length = this.length++;\n      if(length === this.size){\n        this.resize();\n      }\n      const buf = this.clone();\n      this.buf[0] = val;\n      buf.copy(this.buf,1, 0, length);\n    }\n  }\n  append(val){\n    const length = this.length++;\n    if(length === this.size){\n      this.resize();\n    }\n    this.buf[length] = val;\n  }\n  clone(){\n    return Buffer.from(this.buf.slice(0, this.length));\n  }\n  resize(){\n    const length = this.length;\n    this.size = this.size * 2;\n    const buf = Buffer.allocUnsafe(this.size);\n    this.buf.copy(buf,0, 0, length);\n    this.buf = buf;\n  }\n  toString(encoding){\n    if(encoding){\n      return this.buf.slice(0, this.length).toString(encoding);\n    }else {\n      return Uint8Array.prototype.slice.call(this.buf.slice(0, this.length));\n    }\n  }\n  toJSON(){\n    return this.toString('utf8');\n  }\n  reset(){\n    this.length = 0;\n  }\n}\n\n// white space characters\n// https://en.wikipedia.org/wiki/Whitespace_character\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Character_Classes#Types\n// \\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff\nconst np = 12;\nconst cr$1 = 13; // `\\r`, carriage return, 0x0D in hexadécimal, 13 in decimal\nconst nl$1 = 10; // `\\n`, newline, 0x0A in hexadecimal, 10 in decimal\nconst space = 32;\nconst tab = 9;\n\nconst init_state = function(options){\n  return {\n    bomSkipped: false,\n    bufBytesStart: 0,\n    castField: options.cast_function,\n    commenting: false,\n    // Current error encountered by a record\n    error: undefined,\n    enabled: options.from_line === 1,\n    escaping: false,\n    escapeIsQuote: isBuffer$1(options.escape) && isBuffer$1(options.quote) && Buffer.compare(options.escape, options.quote) === 0,\n    // columns can be `false`, `true`, `Array`\n    expectedRecordLength: Array.isArray(options.columns) ? options.columns.length : undefined,\n    field: new ResizeableBuffer(20),\n    firstLineToHeaders: options.cast_first_line_to_header,\n    needMoreDataSize: Math.max(\n      // Skip if the remaining buffer smaller than comment\n      options.comment !== null ? options.comment.length : 0,\n      // Skip if the remaining buffer can be delimiter\n      ...options.delimiter.map((delimiter) => delimiter.length),\n      // Skip if the remaining buffer can be escape sequence\n      options.quote !== null ? options.quote.length : 0,\n    ),\n    previousBuf: undefined,\n    quoting: false,\n    stop: false,\n    rawBuffer: new ResizeableBuffer(100),\n    record: [],\n    recordHasError: false,\n    record_length: 0,\n    recordDelimiterMaxLength: options.record_delimiter.length === 0 ? 0 : Math.max(...options.record_delimiter.map((v) => v.length)),\n    trimChars: [Buffer.from(' ', options.encoding)[0], Buffer.from('\\t', options.encoding)[0]],\n    wasQuoting: false,\n    wasRowDelimiter: false,\n    timchars: [\n      Buffer.from(Buffer.from([cr$1], 'utf8').toString(), options.encoding),\n      Buffer.from(Buffer.from([nl$1], 'utf8').toString(), options.encoding),\n      Buffer.from(Buffer.from([np], 'utf8').toString(), options.encoding),\n      Buffer.from(Buffer.from([space], 'utf8').toString(), options.encoding),\n      Buffer.from(Buffer.from([tab], 'utf8').toString(), options.encoding),\n    ]\n  };\n};\n\nconst underscore$1 = function(str){\n  return str.replace(/([A-Z])/g, function(_, match){\n    return '_' + match.toLowerCase();\n  });\n};\n\nconst normalize_options$1 = function(opts){\n  const options = {};\n  // Merge with user options\n  for(const opt in opts){\n    options[underscore$1(opt)] = opts[opt];\n  }\n  // Normalize option `encoding`\n  // Note: defined first because other options depends on it\n  // to convert chars/strings into buffers.\n  if(options.encoding === undefined || options.encoding === true){\n    options.encoding = 'utf8';\n  }else if(options.encoding === null || options.encoding === false){\n    options.encoding = null;\n  }else if(typeof options.encoding !== 'string' && options.encoding !== null){\n    throw new CsvError$1('CSV_INVALID_OPTION_ENCODING', [\n      'Invalid option encoding:',\n      'encoding must be a string or null to return a buffer,',\n      `got ${JSON.stringify(options.encoding)}`\n    ], options);\n  }\n  // Normalize option `bom`\n  if(options.bom === undefined || options.bom === null || options.bom === false){\n    options.bom = false;\n  }else if(options.bom !== true){\n    throw new CsvError$1('CSV_INVALID_OPTION_BOM', [\n      'Invalid option bom:', 'bom must be true,',\n      `got ${JSON.stringify(options.bom)}`\n    ], options);\n  }\n  // Normalize option `cast`\n  options.cast_function = null;\n  if(options.cast === undefined || options.cast === null || options.cast === false || options.cast === ''){\n    options.cast = undefined;\n  }else if(typeof options.cast === 'function'){\n    options.cast_function = options.cast;\n    options.cast = true;\n  }else if(options.cast !== true){\n    throw new CsvError$1('CSV_INVALID_OPTION_CAST', [\n      'Invalid option cast:', 'cast must be true or a function,',\n      `got ${JSON.stringify(options.cast)}`\n    ], options);\n  }\n  // Normalize option `cast_date`\n  if(options.cast_date === undefined || options.cast_date === null || options.cast_date === false || options.cast_date === ''){\n    options.cast_date = false;\n  }else if(options.cast_date === true){\n    options.cast_date = function(value){\n      const date = Date.parse(value);\n      return !isNaN(date) ? new Date(date) : value;\n    };\n  }else if (typeof options.cast_date !== 'function'){\n    throw new CsvError$1('CSV_INVALID_OPTION_CAST_DATE', [\n      'Invalid option cast_date:', 'cast_date must be true or a function,',\n      `got ${JSON.stringify(options.cast_date)}`\n    ], options);\n  }\n  // Normalize option `columns`\n  options.cast_first_line_to_header = null;\n  if(options.columns === true){\n    // Fields in the first line are converted as-is to columns\n    options.cast_first_line_to_header = undefined;\n  }else if(typeof options.columns === 'function'){\n    options.cast_first_line_to_header = options.columns;\n    options.columns = true;\n  }else if(Array.isArray(options.columns)){\n    options.columns = normalize_columns_array(options.columns);\n  }else if(options.columns === undefined || options.columns === null || options.columns === false){\n    options.columns = false;\n  }else {\n    throw new CsvError$1('CSV_INVALID_OPTION_COLUMNS', [\n      'Invalid option columns:',\n      'expect an array, a function or true,',\n      `got ${JSON.stringify(options.columns)}`\n    ], options);\n  }\n  // Normalize option `group_columns_by_name`\n  if(options.group_columns_by_name === undefined || options.group_columns_by_name === null || options.group_columns_by_name === false){\n    options.group_columns_by_name = false;\n  }else if(options.group_columns_by_name !== true){\n    throw new CsvError$1('CSV_INVALID_OPTION_GROUP_COLUMNS_BY_NAME', [\n      'Invalid option group_columns_by_name:',\n      'expect an boolean,',\n      `got ${JSON.stringify(options.group_columns_by_name)}`\n    ], options);\n  }else if(options.columns === false){\n    throw new CsvError$1('CSV_INVALID_OPTION_GROUP_COLUMNS_BY_NAME', [\n      'Invalid option group_columns_by_name:',\n      'the `columns` mode must be activated.'\n    ], options);\n  }\n  // Normalize option `comment`\n  if(options.comment === undefined || options.comment === null || options.comment === false || options.comment === ''){\n    options.comment = null;\n  }else {\n    if(typeof options.comment === 'string'){\n      options.comment = Buffer.from(options.comment, options.encoding);\n    }\n    if(!isBuffer$1(options.comment)){\n      throw new CsvError$1('CSV_INVALID_OPTION_COMMENT', [\n        'Invalid option comment:',\n        'comment must be a buffer or a string,',\n        `got ${JSON.stringify(options.comment)}`\n      ], options);\n    }\n  }\n  // Normalize option `delimiter`\n  const delimiter_json = JSON.stringify(options.delimiter);\n  if(!Array.isArray(options.delimiter)) options.delimiter = [options.delimiter];\n  if(options.delimiter.length === 0){\n    throw new CsvError$1('CSV_INVALID_OPTION_DELIMITER', [\n      'Invalid option delimiter:',\n      'delimiter must be a non empty string or buffer or array of string|buffer,',\n      `got ${delimiter_json}`\n    ], options);\n  }\n  options.delimiter = options.delimiter.map(function(delimiter){\n    if(delimiter === undefined || delimiter === null || delimiter === false){\n      return Buffer.from(',', options.encoding);\n    }\n    if(typeof delimiter === 'string'){\n      delimiter = Buffer.from(delimiter, options.encoding);\n    }\n    if(!isBuffer$1(delimiter) || delimiter.length === 0){\n      throw new CsvError$1('CSV_INVALID_OPTION_DELIMITER', [\n        'Invalid option delimiter:',\n        'delimiter must be a non empty string or buffer or array of string|buffer,',\n        `got ${delimiter_json}`\n      ], options);\n    }\n    return delimiter;\n  });\n  // Normalize option `escape`\n  if(options.escape === undefined || options.escape === true){\n    options.escape = Buffer.from('\"', options.encoding);\n  }else if(typeof options.escape === 'string'){\n    options.escape = Buffer.from(options.escape, options.encoding);\n  }else if (options.escape === null || options.escape === false){\n    options.escape = null;\n  }\n  if(options.escape !== null){\n    if(!isBuffer$1(options.escape)){\n      throw new Error(`Invalid Option: escape must be a buffer, a string or a boolean, got ${JSON.stringify(options.escape)}`);\n    }\n  }\n  // Normalize option `from`\n  if(options.from === undefined || options.from === null){\n    options.from = 1;\n  }else {\n    if(typeof options.from === 'string' && /\\d+/.test(options.from)){\n      options.from = parseInt(options.from);\n    }\n    if(Number.isInteger(options.from)){\n      if(options.from < 0){\n        throw new Error(`Invalid Option: from must be a positive integer, got ${JSON.stringify(opts.from)}`);\n      }\n    }else {\n      throw new Error(`Invalid Option: from must be an integer, got ${JSON.stringify(options.from)}`);\n    }\n  }\n  // Normalize option `from_line`\n  if(options.from_line === undefined || options.from_line === null){\n    options.from_line = 1;\n  }else {\n    if(typeof options.from_line === 'string' && /\\d+/.test(options.from_line)){\n      options.from_line = parseInt(options.from_line);\n    }\n    if(Number.isInteger(options.from_line)){\n      if(options.from_line <= 0){\n        throw new Error(`Invalid Option: from_line must be a positive integer greater than 0, got ${JSON.stringify(opts.from_line)}`);\n      }\n    }else {\n      throw new Error(`Invalid Option: from_line must be an integer, got ${JSON.stringify(opts.from_line)}`);\n    }\n  }\n  // Normalize options `ignore_last_delimiters`\n  if(options.ignore_last_delimiters === undefined || options.ignore_last_delimiters === null){\n    options.ignore_last_delimiters = false;\n  }else if(typeof options.ignore_last_delimiters === 'number'){\n    options.ignore_last_delimiters = Math.floor(options.ignore_last_delimiters);\n    if(options.ignore_last_delimiters === 0){\n      options.ignore_last_delimiters = false;\n    }\n  }else if(typeof options.ignore_last_delimiters !== 'boolean'){\n    throw new CsvError$1('CSV_INVALID_OPTION_IGNORE_LAST_DELIMITERS', [\n      'Invalid option `ignore_last_delimiters`:',\n      'the value must be a boolean value or an integer,',\n      `got ${JSON.stringify(options.ignore_last_delimiters)}`\n    ], options);\n  }\n  if(options.ignore_last_delimiters === true && options.columns === false){\n    throw new CsvError$1('CSV_IGNORE_LAST_DELIMITERS_REQUIRES_COLUMNS', [\n      'The option `ignore_last_delimiters`',\n      'requires the activation of the `columns` option'\n    ], options);\n  }\n  // Normalize option `info`\n  if(options.info === undefined || options.info === null || options.info === false){\n    options.info = false;\n  }else if(options.info !== true){\n    throw new Error(`Invalid Option: info must be true, got ${JSON.stringify(options.info)}`);\n  }\n  // Normalize option `max_record_size`\n  if(options.max_record_size === undefined || options.max_record_size === null || options.max_record_size === false){\n    options.max_record_size = 0;\n  }else if(Number.isInteger(options.max_record_size) && options.max_record_size >= 0);else if(typeof options.max_record_size === 'string' && /\\d+/.test(options.max_record_size)){\n    options.max_record_size = parseInt(options.max_record_size);\n  }else {\n    throw new Error(`Invalid Option: max_record_size must be a positive integer, got ${JSON.stringify(options.max_record_size)}`);\n  }\n  // Normalize option `objname`\n  if(options.objname === undefined || options.objname === null || options.objname === false){\n    options.objname = undefined;\n  }else if(isBuffer$1(options.objname)){\n    if(options.objname.length === 0){\n      throw new Error(`Invalid Option: objname must be a non empty buffer`);\n    }\n    if(options.encoding === null);else {\n      options.objname = options.objname.toString(options.encoding);\n    }\n  }else if(typeof options.objname === 'string'){\n    if(options.objname.length === 0){\n      throw new Error(`Invalid Option: objname must be a non empty string`);\n    }\n    // Great, nothing to do\n  }else if(typeof options.objname === 'number');else {\n    throw new Error(`Invalid Option: objname must be a string or a buffer, got ${options.objname}`);\n  }\n  if(options.objname !== undefined){\n    if(typeof options.objname === 'number'){\n      if(options.columns !== false){\n        throw Error('Invalid Option: objname index cannot be combined with columns or be defined as a field');\n      }\n    }else { // A string or a buffer\n      if(options.columns === false){\n        throw Error('Invalid Option: objname field must be combined with columns or be defined as an index');\n      }\n    }\n  }\n  // Normalize option `on_record`\n  if(options.on_record === undefined || options.on_record === null){\n    options.on_record = undefined;\n  }else if(typeof options.on_record !== 'function'){\n    throw new CsvError$1('CSV_INVALID_OPTION_ON_RECORD', [\n      'Invalid option `on_record`:',\n      'expect a function,',\n      `got ${JSON.stringify(options.on_record)}`\n    ], options);\n  }\n  // Normalize option `quote`\n  if(options.quote === null || options.quote === false || options.quote === ''){\n    options.quote = null;\n  }else {\n    if(options.quote === undefined || options.quote === true){\n      options.quote = Buffer.from('\"', options.encoding);\n    }else if(typeof options.quote === 'string'){\n      options.quote = Buffer.from(options.quote, options.encoding);\n    }\n    if(!isBuffer$1(options.quote)){\n      throw new Error(`Invalid Option: quote must be a buffer or a string, got ${JSON.stringify(options.quote)}`);\n    }\n  }\n  // Normalize option `raw`\n  if(options.raw === undefined || options.raw === null || options.raw === false){\n    options.raw = false;\n  }else if(options.raw !== true){\n    throw new Error(`Invalid Option: raw must be true, got ${JSON.stringify(options.raw)}`);\n  }\n  // Normalize option `record_delimiter`\n  if(options.record_delimiter === undefined){\n    options.record_delimiter = [];\n  }else if(typeof options.record_delimiter === 'string' || isBuffer$1(options.record_delimiter)){\n    if(options.record_delimiter.length === 0){\n      throw new CsvError$1('CSV_INVALID_OPTION_RECORD_DELIMITER', [\n        'Invalid option `record_delimiter`:',\n        'value must be a non empty string or buffer,',\n        `got ${JSON.stringify(options.record_delimiter)}`\n      ], options);\n    }\n    options.record_delimiter = [options.record_delimiter];\n  }else if(!Array.isArray(options.record_delimiter)){\n    throw new CsvError$1('CSV_INVALID_OPTION_RECORD_DELIMITER', [\n      'Invalid option `record_delimiter`:',\n      'value must be a string, a buffer or array of string|buffer,',\n      `got ${JSON.stringify(options.record_delimiter)}`\n    ], options);\n  }\n  options.record_delimiter = options.record_delimiter.map(function(rd, i){\n    if(typeof rd !== 'string' && ! isBuffer$1(rd)){\n      throw new CsvError$1('CSV_INVALID_OPTION_RECORD_DELIMITER', [\n        'Invalid option `record_delimiter`:',\n        'value must be a string, a buffer or array of string|buffer',\n        `at index ${i},`,\n        `got ${JSON.stringify(rd)}`\n      ], options);\n    }else if(rd.length === 0){\n      throw new CsvError$1('CSV_INVALID_OPTION_RECORD_DELIMITER', [\n        'Invalid option `record_delimiter`:',\n        'value must be a non empty string or buffer',\n        `at index ${i},`,\n        `got ${JSON.stringify(rd)}`\n      ], options);\n    }\n    if(typeof rd === 'string'){\n      rd = Buffer.from(rd, options.encoding);\n    }\n    return rd;\n  });\n  // Normalize option `relax_column_count`\n  if(typeof options.relax_column_count === 'boolean');else if(options.relax_column_count === undefined || options.relax_column_count === null){\n    options.relax_column_count = false;\n  }else {\n    throw new Error(`Invalid Option: relax_column_count must be a boolean, got ${JSON.stringify(options.relax_column_count)}`);\n  }\n  if(typeof options.relax_column_count_less === 'boolean');else if(options.relax_column_count_less === undefined || options.relax_column_count_less === null){\n    options.relax_column_count_less = false;\n  }else {\n    throw new Error(`Invalid Option: relax_column_count_less must be a boolean, got ${JSON.stringify(options.relax_column_count_less)}`);\n  }\n  if(typeof options.relax_column_count_more === 'boolean');else if(options.relax_column_count_more === undefined || options.relax_column_count_more === null){\n    options.relax_column_count_more = false;\n  }else {\n    throw new Error(`Invalid Option: relax_column_count_more must be a boolean, got ${JSON.stringify(options.relax_column_count_more)}`);\n  }\n  // Normalize option `relax_quotes`\n  if(typeof options.relax_quotes === 'boolean');else if(options.relax_quotes === undefined || options.relax_quotes === null){\n    options.relax_quotes = false;\n  }else {\n    throw new Error(`Invalid Option: relax_quotes must be a boolean, got ${JSON.stringify(options.relax_quotes)}`);\n  }\n  // Normalize option `skip_empty_lines`\n  if(typeof options.skip_empty_lines === 'boolean');else if(options.skip_empty_lines === undefined || options.skip_empty_lines === null){\n    options.skip_empty_lines = false;\n  }else {\n    throw new Error(`Invalid Option: skip_empty_lines must be a boolean, got ${JSON.stringify(options.skip_empty_lines)}`);\n  }\n  // Normalize option `skip_records_with_empty_values`\n  if(typeof options.skip_records_with_empty_values === 'boolean');else if(options.skip_records_with_empty_values === undefined || options.skip_records_with_empty_values === null){\n    options.skip_records_with_empty_values = false;\n  }else {\n    throw new Error(`Invalid Option: skip_records_with_empty_values must be a boolean, got ${JSON.stringify(options.skip_records_with_empty_values)}`);\n  }\n  // Normalize option `skip_records_with_error`\n  if(typeof options.skip_records_with_error === 'boolean');else if(options.skip_records_with_error === undefined || options.skip_records_with_error === null){\n    options.skip_records_with_error = false;\n  }else {\n    throw new Error(`Invalid Option: skip_records_with_error must be a boolean, got ${JSON.stringify(options.skip_records_with_error)}`);\n  }\n  // Normalize option `rtrim`\n  if(options.rtrim === undefined || options.rtrim === null || options.rtrim === false){\n    options.rtrim = false;\n  }else if(options.rtrim !== true){\n    throw new Error(`Invalid Option: rtrim must be a boolean, got ${JSON.stringify(options.rtrim)}`);\n  }\n  // Normalize option `ltrim`\n  if(options.ltrim === undefined || options.ltrim === null || options.ltrim === false){\n    options.ltrim = false;\n  }else if(options.ltrim !== true){\n    throw new Error(`Invalid Option: ltrim must be a boolean, got ${JSON.stringify(options.ltrim)}`);\n  }\n  // Normalize option `trim`\n  if(options.trim === undefined || options.trim === null || options.trim === false){\n    options.trim = false;\n  }else if(options.trim !== true){\n    throw new Error(`Invalid Option: trim must be a boolean, got ${JSON.stringify(options.trim)}`);\n  }\n  // Normalize options `trim`, `ltrim` and `rtrim`\n  if(options.trim === true && opts.ltrim !== false){\n    options.ltrim = true;\n  }else if(options.ltrim !== true){\n    options.ltrim = false;\n  }\n  if(options.trim === true && opts.rtrim !== false){\n    options.rtrim = true;\n  }else if(options.rtrim !== true){\n    options.rtrim = false;\n  }\n  // Normalize option `to`\n  if(options.to === undefined || options.to === null){\n    options.to = -1;\n  }else {\n    if(typeof options.to === 'string' && /\\d+/.test(options.to)){\n      options.to = parseInt(options.to);\n    }\n    if(Number.isInteger(options.to)){\n      if(options.to <= 0){\n        throw new Error(`Invalid Option: to must be a positive integer greater than 0, got ${JSON.stringify(opts.to)}`);\n      }\n    }else {\n      throw new Error(`Invalid Option: to must be an integer, got ${JSON.stringify(opts.to)}`);\n    }\n  }\n  // Normalize option `to_line`\n  if(options.to_line === undefined || options.to_line === null){\n    options.to_line = -1;\n  }else {\n    if(typeof options.to_line === 'string' && /\\d+/.test(options.to_line)){\n      options.to_line = parseInt(options.to_line);\n    }\n    if(Number.isInteger(options.to_line)){\n      if(options.to_line <= 0){\n        throw new Error(`Invalid Option: to_line must be a positive integer greater than 0, got ${JSON.stringify(opts.to_line)}`);\n      }\n    }else {\n      throw new Error(`Invalid Option: to_line must be an integer, got ${JSON.stringify(opts.to_line)}`);\n    }\n  }\n  return options;\n};\n\nconst isRecordEmpty = function(record){\n  return record.every((field) => field == null || field.toString && field.toString().trim() === '');\n};\n\nconst cr = 13; // `\\r`, carriage return, 0x0D in hexadécimal, 13 in decimal\nconst nl = 10; // `\\n`, newline, 0x0A in hexadecimal, 10 in decimal\n\nconst boms = {\n  // Note, the following are equals:\n  // Buffer.from(\"\\ufeff\")\n  // Buffer.from([239, 187, 191])\n  // Buffer.from('EFBBBF', 'hex')\n  'utf8': Buffer.from([239, 187, 191]),\n  // Note, the following are equals:\n  // Buffer.from \"\\ufeff\", 'utf16le\n  // Buffer.from([255, 254])\n  'utf16le': Buffer.from([255, 254])\n};\n\nconst transform$1 = function(original_options = {}) {\n  const info = {\n    bytes: 0,\n    comment_lines: 0,\n    empty_lines: 0,\n    invalid_field_length: 0,\n    lines: 1,\n    records: 0\n  };\n  const options = normalize_options$1(original_options);\n  return {\n    info: info,\n    original_options: original_options,\n    options: options,\n    state: init_state(options),\n    __needMoreData: function(i, bufLen, end){\n      if(end) return false;\n      const {encoding, escape, quote} = this.options;\n      const {quoting, needMoreDataSize, recordDelimiterMaxLength} = this.state;\n      const numOfCharLeft = bufLen - i - 1;\n      const requiredLength = Math.max(\n        needMoreDataSize,\n        // Skip if the remaining buffer smaller than record delimiter\n        // If \"record_delimiter\" is yet to be discovered:\n        // 1. It is equals to `[]` and \"recordDelimiterMaxLength\" equals `0`\n        // 2. We set the length to windows line ending in the current encoding\n        // Note, that encoding is known from user or bom discovery at that point\n        // recordDelimiterMaxLength,\n        recordDelimiterMaxLength === 0 ? Buffer.from('\\r\\n', encoding).length : recordDelimiterMaxLength,\n        // Skip if remaining buffer can be an escaped quote\n        quoting ? ((escape === null ? 0 : escape.length) + quote.length) : 0,\n        // Skip if remaining buffer can be record delimiter following the closing quote\n        quoting ? (quote.length + recordDelimiterMaxLength) : 0,\n      );\n      return numOfCharLeft < requiredLength;\n    },\n    // Central parser implementation\n    parse: function(nextBuf, end, push, close){\n      const {bom, encoding, from_line, ltrim, max_record_size,raw, relax_quotes, rtrim, skip_empty_lines, to, to_line} = this.options;\n      let {comment, escape, quote, record_delimiter} = this.options;\n      const {bomSkipped, previousBuf, rawBuffer, escapeIsQuote} = this.state;\n      let buf;\n      if(previousBuf === undefined){\n        if(nextBuf === undefined){\n          // Handle empty string\n          close();\n          return;\n        }else {\n          buf = nextBuf;\n        }\n      }else if(previousBuf !== undefined && nextBuf === undefined){\n        buf = previousBuf;\n      }else {\n        buf = Buffer.concat([previousBuf, nextBuf]);\n      }\n      // Handle UTF BOM\n      if(bomSkipped === false){\n        if(bom === false){\n          this.state.bomSkipped = true;\n        }else if(buf.length < 3){\n          // No enough data\n          if(end === false){\n            // Wait for more data\n            this.state.previousBuf = buf;\n            return;\n          }\n        }else {\n          for(const encoding in boms){\n            if(boms[encoding].compare(buf, 0, boms[encoding].length) === 0){\n              // Skip BOM\n              const bomLength = boms[encoding].length;\n              this.state.bufBytesStart += bomLength;\n              buf = buf.slice(bomLength);\n              // Renormalize original options with the new encoding\n              this.options = normalize_options$1({...this.original_options, encoding: encoding});\n              // Options will re-evaluate the Buffer with the new encoding\n              ({comment, escape, quote } = this.options);\n              break;\n            }\n          }\n          this.state.bomSkipped = true;\n        }\n      }\n      const bufLen = buf.length;\n      let pos;\n      for(pos = 0; pos < bufLen; pos++){\n        // Ensure we get enough space to look ahead\n        // There should be a way to move this out of the loop\n        if(this.__needMoreData(pos, bufLen, end)){\n          break;\n        }\n        if(this.state.wasRowDelimiter === true){\n          this.info.lines++;\n          this.state.wasRowDelimiter = false;\n        }\n        if(to_line !== -1 && this.info.lines > to_line){\n          this.state.stop = true;\n          close();\n          return;\n        }\n        // Auto discovery of record_delimiter, unix, mac and windows supported\n        if(this.state.quoting === false && record_delimiter.length === 0){\n          const record_delimiterCount = this.__autoDiscoverRecordDelimiter(buf, pos);\n          if(record_delimiterCount){\n            record_delimiter = this.options.record_delimiter;\n          }\n        }\n        const chr = buf[pos];\n        if(raw === true){\n          rawBuffer.append(chr);\n        }\n        if((chr === cr || chr === nl) && this.state.wasRowDelimiter === false){\n          this.state.wasRowDelimiter = true;\n        }\n        // Previous char was a valid escape char\n        // treat the current char as a regular char\n        if(this.state.escaping === true){\n          this.state.escaping = false;\n        }else {\n          // Escape is only active inside quoted fields\n          // We are quoting, the char is an escape chr and there is a chr to escape\n          // if(escape !== null && this.state.quoting === true && chr === escape && pos + 1 < bufLen){\n          if(escape !== null && this.state.quoting === true && this.__isEscape(buf, pos, chr) && pos + escape.length < bufLen){\n            if(escapeIsQuote){\n              if(this.__isQuote(buf, pos+escape.length)){\n                this.state.escaping = true;\n                pos += escape.length - 1;\n                continue;\n              }\n            }else {\n              this.state.escaping = true;\n              pos += escape.length - 1;\n              continue;\n            }\n          }\n          // Not currently escaping and chr is a quote\n          // TODO: need to compare bytes instead of single char\n          if(this.state.commenting === false && this.__isQuote(buf, pos)){\n            if(this.state.quoting === true){\n              const nextChr = buf[pos+quote.length];\n              const isNextChrTrimable = rtrim && this.__isCharTrimable(buf, pos+quote.length);\n              const isNextChrComment = comment !== null && this.__compareBytes(comment, buf, pos+quote.length, nextChr);\n              const isNextChrDelimiter = this.__isDelimiter(buf, pos+quote.length, nextChr);\n              const isNextChrRecordDelimiter = record_delimiter.length === 0 ? this.__autoDiscoverRecordDelimiter(buf, pos+quote.length) : this.__isRecordDelimiter(nextChr, buf, pos+quote.length);\n              // Escape a quote\n              // Treat next char as a regular character\n              if(escape !== null && this.__isEscape(buf, pos, chr) && this.__isQuote(buf, pos + escape.length)){\n                pos += escape.length - 1;\n              }else if(!nextChr || isNextChrDelimiter || isNextChrRecordDelimiter || isNextChrComment || isNextChrTrimable){\n                this.state.quoting = false;\n                this.state.wasQuoting = true;\n                pos += quote.length - 1;\n                continue;\n              }else if(relax_quotes === false){\n                const err = this.__error(\n                  new CsvError$1('CSV_INVALID_CLOSING_QUOTE', [\n                    'Invalid Closing Quote:',\n                    `got \"${String.fromCharCode(nextChr)}\"`,\n                    `at line ${this.info.lines}`,\n                    'instead of delimiter, record delimiter, trimable character',\n                    '(if activated) or comment',\n                  ], this.options, this.__infoField())\n                );\n                if(err !== undefined) return err;\n              }else {\n                this.state.quoting = false;\n                this.state.wasQuoting = true;\n                this.state.field.prepend(quote);\n                pos += quote.length - 1;\n              }\n            }else {\n              if(this.state.field.length !== 0){\n                // In relax_quotes mode, treat opening quote preceded by chrs as regular\n                if(relax_quotes === false){\n                  const info = this.__infoField();\n                  const bom = Object.keys(boms).map(b => boms[b].equals(this.state.field.toString()) ? b : false).filter(Boolean)[0];\n                  const err = this.__error(\n                    new CsvError$1('INVALID_OPENING_QUOTE', [\n                      'Invalid Opening Quote:',\n                      `a quote is found on field ${JSON.stringify(info.column)} at line ${info.lines}, value is ${JSON.stringify(this.state.field.toString(encoding))}`,\n                      bom ? `(${bom} bom)` : undefined\n                    ], this.options, info, {\n                      field: this.state.field,\n                    })\n                  );\n                  if(err !== undefined) return err;\n                }\n              }else {\n                this.state.quoting = true;\n                pos += quote.length - 1;\n                continue;\n              }\n            }\n          }\n          if(this.state.quoting === false){\n            const recordDelimiterLength = this.__isRecordDelimiter(chr, buf, pos);\n            if(recordDelimiterLength !== 0){\n              // Do not emit comments which take a full line\n              const skipCommentLine = this.state.commenting && (this.state.wasQuoting === false && this.state.record.length === 0 && this.state.field.length === 0);\n              if(skipCommentLine){\n                this.info.comment_lines++;\n                // Skip full comment line\n              }else {\n                // Activate records emition if above from_line\n                if(this.state.enabled === false && this.info.lines + (this.state.wasRowDelimiter === true ? 1: 0) >= from_line){\n                  this.state.enabled = true;\n                  this.__resetField();\n                  this.__resetRecord();\n                  pos += recordDelimiterLength - 1;\n                  continue;\n                }\n                // Skip if line is empty and skip_empty_lines activated\n                if(skip_empty_lines === true && this.state.wasQuoting === false && this.state.record.length === 0 && this.state.field.length === 0){\n                  this.info.empty_lines++;\n                  pos += recordDelimiterLength - 1;\n                  continue;\n                }\n                this.info.bytes = this.state.bufBytesStart + pos;\n                const errField = this.__onField();\n                if(errField !== undefined) return errField;\n                this.info.bytes = this.state.bufBytesStart + pos + recordDelimiterLength;\n                const errRecord = this.__onRecord(push);\n                if(errRecord !== undefined) return errRecord;\n                if(to !== -1 && this.info.records >= to){\n                  this.state.stop = true;\n                  close();\n                  return;\n                }\n              }\n              this.state.commenting = false;\n              pos += recordDelimiterLength - 1;\n              continue;\n            }\n            if(this.state.commenting){\n              continue;\n            }\n            const commentCount = comment === null ? 0 : this.__compareBytes(comment, buf, pos, chr);\n            if(commentCount !== 0){\n              this.state.commenting = true;\n              continue;\n            }\n            const delimiterLength = this.__isDelimiter(buf, pos, chr);\n            if(delimiterLength !== 0){\n              this.info.bytes = this.state.bufBytesStart + pos;\n              const errField = this.__onField();\n              if(errField !== undefined) return errField;\n              pos += delimiterLength - 1;\n              continue;\n            }\n          }\n        }\n        if(this.state.commenting === false){\n          if(max_record_size !== 0 && this.state.record_length + this.state.field.length > max_record_size){\n            return this.__error(\n              new CsvError$1('CSV_MAX_RECORD_SIZE', [\n                'Max Record Size:',\n                'record exceed the maximum number of tolerated bytes',\n                `of ${max_record_size}`,\n                `at line ${this.info.lines}`,\n              ], this.options, this.__infoField())\n            );\n          }\n        }\n        const lappend = ltrim === false || this.state.quoting === true || this.state.field.length !== 0 || !this.__isCharTrimable(buf, pos);\n        // rtrim in non quoting is handle in __onField\n        const rappend = rtrim === false || this.state.wasQuoting === false;\n        if(lappend === true && rappend === true){\n          this.state.field.append(chr);\n        }else if(rtrim === true && !this.__isCharTrimable(buf, pos)){\n          return this.__error(\n            new CsvError$1('CSV_NON_TRIMABLE_CHAR_AFTER_CLOSING_QUOTE', [\n              'Invalid Closing Quote:',\n              'found non trimable byte after quote',\n              `at line ${this.info.lines}`,\n            ], this.options, this.__infoField())\n          );\n        }else {\n          if(lappend === false){\n            pos += this.__isCharTrimable(buf, pos) - 1;\n          }\n          continue;\n        }\n      }\n      if(end === true){\n        // Ensure we are not ending in a quoting state\n        if(this.state.quoting === true){\n          const err = this.__error(\n            new CsvError$1('CSV_QUOTE_NOT_CLOSED', [\n              'Quote Not Closed:',\n              `the parsing is finished with an opening quote at line ${this.info.lines}`,\n            ], this.options, this.__infoField())\n          );\n          if(err !== undefined) return err;\n        }else {\n          // Skip last line if it has no characters\n          if(this.state.wasQuoting === true || this.state.record.length !== 0 || this.state.field.length !== 0){\n            this.info.bytes = this.state.bufBytesStart + pos;\n            const errField = this.__onField();\n            if(errField !== undefined) return errField;\n            const errRecord = this.__onRecord(push);\n            if(errRecord !== undefined) return errRecord;\n          }else if(this.state.wasRowDelimiter === true){\n            this.info.empty_lines++;\n          }else if(this.state.commenting === true){\n            this.info.comment_lines++;\n          }\n        }\n      }else {\n        this.state.bufBytesStart += pos;\n        this.state.previousBuf = buf.slice(pos);\n      }\n      if(this.state.wasRowDelimiter === true){\n        this.info.lines++;\n        this.state.wasRowDelimiter = false;\n      }\n    },\n    __onRecord: function(push){\n      const {columns, group_columns_by_name, encoding, info, from, relax_column_count, relax_column_count_less, relax_column_count_more, raw, skip_records_with_empty_values} = this.options;\n      const {enabled, record} = this.state;\n      if(enabled === false){\n        return this.__resetRecord();\n      }\n      // Convert the first line into column names\n      const recordLength = record.length;\n      if(columns === true){\n        if(skip_records_with_empty_values === true && isRecordEmpty(record)){\n          this.__resetRecord();\n          return;\n        }\n        return this.__firstLineToColumns(record);\n      }\n      if(columns === false && this.info.records === 0){\n        this.state.expectedRecordLength = recordLength;\n      }\n      if(recordLength !== this.state.expectedRecordLength){\n        const err = columns === false ?\n          new CsvError$1('CSV_RECORD_INCONSISTENT_FIELDS_LENGTH', [\n            'Invalid Record Length:',\n            `expect ${this.state.expectedRecordLength},`,\n            `got ${recordLength} on line ${this.info.lines}`,\n          ], this.options, this.__infoField(), {\n            record: record,\n          })\n          :\n          new CsvError$1('CSV_RECORD_INCONSISTENT_COLUMNS', [\n            'Invalid Record Length:',\n            `columns length is ${columns.length},`, // rename columns\n            `got ${recordLength} on line ${this.info.lines}`,\n          ], this.options, this.__infoField(), {\n            record: record,\n          });\n        if(relax_column_count === true ||\n          (relax_column_count_less === true && recordLength < this.state.expectedRecordLength) ||\n          (relax_column_count_more === true && recordLength > this.state.expectedRecordLength)){\n          this.info.invalid_field_length++;\n          this.state.error = err;\n        // Error is undefined with skip_records_with_error\n        }else {\n          const finalErr = this.__error(err);\n          if(finalErr) return finalErr;\n        }\n      }\n      if(skip_records_with_empty_values === true && isRecordEmpty(record)){\n        this.__resetRecord();\n        return;\n      }\n      if(this.state.recordHasError === true){\n        this.__resetRecord();\n        this.state.recordHasError = false;\n        return;\n      }\n      this.info.records++;\n      if(from === 1 || this.info.records >= from){\n        const {objname} = this.options;\n        // With columns, records are object\n        if(columns !== false){\n          const obj = {};\n          // Transform record array to an object\n          for(let i = 0, l = record.length; i < l; i++){\n            if(columns[i] === undefined || columns[i].disabled) continue;\n            // Turn duplicate columns into an array\n            if (group_columns_by_name === true && obj[columns[i].name] !== undefined) {\n              if (Array.isArray(obj[columns[i].name])) {\n                obj[columns[i].name] = obj[columns[i].name].concat(record[i]);\n              } else {\n                obj[columns[i].name] = [obj[columns[i].name], record[i]];\n              }\n            } else {\n              obj[columns[i].name] = record[i];\n            }\n          }\n          // Without objname (default)\n          if(raw === true || info === true){\n            const extRecord = Object.assign(\n              {record: obj},\n              (raw === true ? {raw: this.state.rawBuffer.toString(encoding)}: {}),\n              (info === true ? {info: this.__infoRecord()}: {})\n            );\n            const err = this.__push(\n              objname === undefined ? extRecord : [obj[objname], extRecord]\n              , push);\n            if(err){\n              return err;\n            }\n          }else {\n            const err = this.__push(\n              objname === undefined ? obj : [obj[objname], obj]\n              , push);\n            if(err){\n              return err;\n            }\n          }\n        // Without columns, records are array\n        }else {\n          if(raw === true || info === true){\n            const extRecord = Object.assign(\n              {record: record},\n              raw === true ? {raw: this.state.rawBuffer.toString(encoding)}: {},\n              info === true ? {info: this.__infoRecord()}: {}\n            );\n            const err = this.__push(\n              objname === undefined ? extRecord : [record[objname], extRecord]\n              , push);\n            if(err){\n              return err;\n            }\n          }else {\n            const err = this.__push(\n              objname === undefined ? record : [record[objname], record]\n              , push);\n            if(err){\n              return err;\n            }\n          }\n        }\n      }\n      this.__resetRecord();\n    },\n    __firstLineToColumns: function(record){\n      const {firstLineToHeaders} = this.state;\n      try{\n        const headers = firstLineToHeaders === undefined ? record : firstLineToHeaders.call(null, record);\n        if(!Array.isArray(headers)){\n          return this.__error(\n            new CsvError$1('CSV_INVALID_COLUMN_MAPPING', [\n              'Invalid Column Mapping:',\n              'expect an array from column function,',\n              `got ${JSON.stringify(headers)}`\n            ], this.options, this.__infoField(), {\n              headers: headers,\n            })\n          );\n        }\n        const normalizedHeaders = normalize_columns_array(headers);\n        this.state.expectedRecordLength = normalizedHeaders.length;\n        this.options.columns = normalizedHeaders;\n        this.__resetRecord();\n        return;\n      }catch(err){\n        return err;\n      }\n    },\n    __resetRecord: function(){\n      if(this.options.raw === true){\n        this.state.rawBuffer.reset();\n      }\n      this.state.error = undefined;\n      this.state.record = [];\n      this.state.record_length = 0;\n    },\n    __onField: function(){\n      const {cast, encoding, rtrim, max_record_size} = this.options;\n      const {enabled, wasQuoting} = this.state;\n      // Short circuit for the from_line options\n      if(enabled === false){\n        return this.__resetField();\n      }\n      let field = this.state.field.toString(encoding);\n      if(rtrim === true && wasQuoting === false){\n        field = field.trimRight();\n      }\n      if(cast === true){\n        const [err, f] = this.__cast(field);\n        if(err !== undefined) return err;\n        field = f;\n      }\n      this.state.record.push(field);\n      // Increment record length if record size must not exceed a limit\n      if(max_record_size !== 0 && typeof field === 'string'){\n        this.state.record_length += field.length;\n      }\n      this.__resetField();\n    },\n    __resetField: function(){\n      this.state.field.reset();\n      this.state.wasQuoting = false;\n    },\n    __push: function(record, push){\n      const {on_record} = this.options;\n      if(on_record !== undefined){\n        const info = this.__infoRecord();\n        try{\n          record = on_record.call(null, record, info);\n        }catch(err){\n          return err;\n        }\n        if(record === undefined || record === null){ return; }\n      }\n      push(record);\n    },\n    // Return a tuple with the error and the casted value\n    __cast: function(field){\n      const {columns, relax_column_count} = this.options;\n      const isColumns = Array.isArray(columns);\n      // Dont loose time calling cast\n      // because the final record is an object\n      // and this field can't be associated to a key present in columns\n      if(isColumns === true && relax_column_count && this.options.columns.length <= this.state.record.length){\n        return [undefined, undefined];\n      }\n      if(this.state.castField !== null){\n        try{\n          const info = this.__infoField();\n          return [undefined, this.state.castField.call(null, field, info)];\n        }catch(err){\n          return [err];\n        }\n      }\n      if(this.__isFloat(field)){\n        return [undefined, parseFloat(field)];\n      }else if(this.options.cast_date !== false){\n        const info = this.__infoField();\n        return [undefined, this.options.cast_date.call(null, field, info)];\n      }\n      return [undefined, field];\n    },\n    // Helper to test if a character is a space or a line delimiter\n    __isCharTrimable: function(buf, pos){\n      const isTrim = (buf, pos) => {\n        const {timchars} = this.state;\n        loop1: for(let i = 0; i < timchars.length; i++){\n          const timchar = timchars[i];\n          for(let j = 0; j < timchar.length; j++){\n            if(timchar[j] !== buf[pos+j]) continue loop1;\n          }\n          return timchar.length;\n        }\n        return 0;\n      };\n      return isTrim(buf, pos);\n    },\n    // Keep it in case we implement the `cast_int` option\n    // __isInt(value){\n    //   // return Number.isInteger(parseInt(value))\n    //   // return !isNaN( parseInt( obj ) );\n    //   return /^(\\-|\\+)?[1-9][0-9]*$/.test(value)\n    // }\n    __isFloat: function(value){\n      return (value - parseFloat(value) + 1) >= 0; // Borrowed from jquery\n    },\n    __compareBytes: function(sourceBuf, targetBuf, targetPos, firstByte){\n      if(sourceBuf[0] !== firstByte) return 0;\n      const sourceLength = sourceBuf.length;\n      for(let i = 1; i < sourceLength; i++){\n        if(sourceBuf[i] !== targetBuf[targetPos+i]) return 0;\n      }\n      return sourceLength;\n    },\n    __isDelimiter: function(buf, pos, chr){\n      const {delimiter, ignore_last_delimiters} = this.options;\n      if(ignore_last_delimiters === true && this.state.record.length === this.options.columns.length - 1){\n        return 0;\n      }else if(ignore_last_delimiters !== false && typeof ignore_last_delimiters === 'number' && this.state.record.length === ignore_last_delimiters - 1){\n        return 0;\n      }\n      loop1: for(let i = 0; i < delimiter.length; i++){\n        const del = delimiter[i];\n        if(del[0] === chr){\n          for(let j = 1; j < del.length; j++){\n            if(del[j] !== buf[pos+j]) continue loop1;\n          }\n          return del.length;\n        }\n      }\n      return 0;\n    },\n    __isRecordDelimiter: function(chr, buf, pos){\n      const {record_delimiter} = this.options;\n      const recordDelimiterLength = record_delimiter.length;\n      loop1: for(let i = 0; i < recordDelimiterLength; i++){\n        const rd = record_delimiter[i];\n        const rdLength = rd.length;\n        if(rd[0] !== chr){\n          continue;\n        }\n        for(let j = 1; j < rdLength; j++){\n          if(rd[j] !== buf[pos+j]){\n            continue loop1;\n          }\n        }\n        return rd.length;\n      }\n      return 0;\n    },\n    __isEscape: function(buf, pos, chr){\n      const {escape} = this.options;\n      if(escape === null) return false;\n      const l = escape.length;\n      if(escape[0] === chr){\n        for(let i = 0; i < l; i++){\n          if(escape[i] !== buf[pos+i]){\n            return false;\n          }\n        }\n        return true;\n      }\n      return false;\n    },\n    __isQuote: function(buf, pos){\n      const {quote} = this.options;\n      if(quote === null) return false;\n      const l = quote.length;\n      for(let i = 0; i < l; i++){\n        if(quote[i] !== buf[pos+i]){\n          return false;\n        }\n      }\n      return true;\n    },\n    __autoDiscoverRecordDelimiter: function(buf, pos){\n      const { encoding } = this.options;\n      // Note, we don't need to cache this information in state,\n      // It is only called on the first line until we find out a suitable\n      // record delimiter.\n      const rds = [\n        // Important, the windows line ending must be before mac os 9\n        Buffer.from('\\r\\n', encoding),\n        Buffer.from('\\n', encoding),\n        Buffer.from('\\r', encoding),\n      ];\n      loop: for(let i = 0; i < rds.length; i++){\n        const l = rds[i].length;\n        for(let j = 0; j < l; j++){\n          if(rds[i][j] !== buf[pos + j]){\n            continue loop;\n          }\n        }\n        this.options.record_delimiter.push(rds[i]);\n        this.state.recordDelimiterMaxLength = rds[i].length;\n        return rds[i].length;\n      }\n      return 0;\n    },\n    __error: function(msg){\n      const {encoding, raw, skip_records_with_error} = this.options;\n      const err = typeof msg === 'string' ? new Error(msg) : msg;\n      if(skip_records_with_error){\n        this.state.recordHasError = true;\n        if(this.options.on_skip !== undefined){\n          this.options.on_skip(err, raw ? this.state.rawBuffer.toString(encoding) : undefined);\n        }\n        // this.emit('skip', err, raw ? this.state.rawBuffer.toString(encoding) : undefined);\n        return undefined;\n      }else {\n        return err;\n      }\n    },\n    __infoDataSet: function(){\n      return {\n        ...this.info,\n        columns: this.options.columns\n      };\n    },\n    __infoRecord: function(){\n      const {columns, raw, encoding} = this.options;\n      return {\n        ...this.__infoDataSet(),\n        error: this.state.error,\n        header: columns === true,\n        index: this.state.record.length,\n        raw: raw ? this.state.rawBuffer.toString(encoding) : undefined\n      };\n    },\n    __infoField: function(){\n      const {columns} = this.options;\n      const isColumns = Array.isArray(columns);\n      return {\n        ...this.__infoRecord(),\n        column: isColumns === true ?\n          (columns.length > this.state.record.length ?\n            columns[this.state.record.length].name :\n            null\n          ) :\n          this.state.record.length,\n        quoting: this.state.wasQuoting,\n      };\n    }\n  };\n};\n\nconst parse = function(data, opts={}){\n  if(typeof data === 'string'){\n    data = Buffer.from(data);\n  }\n  const records = opts && opts.objname ? {} : [];\n  const parser = transform$1(opts);\n  const push = (record) => {\n    if(parser.options.objname === undefined)\n      records.push(record);\n    else {\n      records[record[0]] = record[1];\n    }\n  };\n  const close = () => {};\n  const err1 = parser.parse(data, false, push, close);\n  if(err1 !== undefined) throw err1;\n  const err2 = parser.parse(undefined, true, push, close);\n  if(err2 !== undefined) throw err2;\n  return records;\n};\n\n// Lodash implementation of `get`\n\nconst charCodeOfDot = '.'.charCodeAt(0);\nconst reEscapeChar = /\\\\(\\\\)?/g;\nconst rePropName = RegExp(\n  // Match anything that isn't a dot or bracket.\n  '[^.[\\\\]]+' + '|' +\n  // Or match property names within brackets.\n  '\\\\[(?:' +\n    // Match a non-string expression.\n    '([^\"\\'][^[]*)' + '|' +\n    // Or match strings (supports escaping characters).\n    '([\"\\'])((?:(?!\\\\2)[^\\\\\\\\]|\\\\\\\\.)*?)\\\\2' +\n  ')\\\\]'+ '|' +\n  // Or match \"\" as the space between consecutive dots or empty brackets.\n  '(?=(?:\\\\.|\\\\[\\\\])(?:\\\\.|\\\\[\\\\]|$))'\n  , 'g');\nconst reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/;\nconst reIsPlainProp = /^\\w*$/;\nconst getTag = function(value){\n  return Object.prototype.toString.call(value);\n};\nconst isSymbol = function(value){\n  const type = typeof value;\n  return type === 'symbol' || (type === 'object' && value && getTag(value) === '[object Symbol]');\n};\nconst isKey = function(value, object){\n  if(Array.isArray(value)){\n    return false;\n  }\n  const type = typeof value;\n  if(type === 'number' || type === 'symbol' || type === 'boolean' || !value || isSymbol(value)){\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n};\nconst stringToPath = function(string){\n  const result = [];\n  if(string.charCodeAt(0) === charCodeOfDot){\n    result.push('');\n  }\n  string.replace(rePropName, function(match, expression, quote, subString){\n    let key = match;\n    if(quote){\n      key = subString.replace(reEscapeChar, '$1');\n    }else if(expression){\n      key = expression.trim();\n    }\n    result.push(key);\n  });\n  return result;\n};\nconst castPath = function(value, object){\n  if(Array.isArray(value)){\n    return value;\n  } else {\n    return isKey(value, object) ? [value] : stringToPath(value);\n  }\n};\nconst toKey = function(value){\n  if(typeof value === 'string' || isSymbol(value))\n    return value;\n  const result = `${value}`;\n  // eslint-disable-next-line\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n};\nconst get = function(object, path){\n  path = castPath(path, object);\n  let index = 0;\n  const length = path.length;\n  while(object != null && index < length){\n    object = object[toKey(path[index++])];\n  }\n  return (index && index === length) ? object : undefined;\n};\n\nconst is_object = function(obj){\n  return typeof obj === 'object' && obj !== null && ! Array.isArray(obj);\n};\n\nconst normalize_columns = function(columns){\n  if(columns === undefined || columns === null){\n    return [undefined, undefined];\n  }\n  if(typeof columns !== 'object'){\n    return [Error('Invalid option \"columns\": expect an array or an object')];\n  }\n  if(!Array.isArray(columns)){\n    const newcolumns = [];\n    for(const k in columns){\n      newcolumns.push({\n        key: k,\n        header: columns[k]\n      });\n    }\n    columns = newcolumns;\n  }else {\n    const newcolumns = [];\n    for(const column of columns){\n      if(typeof column === 'string'){\n        newcolumns.push({\n          key: column,\n          header: column\n        });\n      }else if(typeof column === 'object' && column !== null && !Array.isArray(column)){\n        if(!column.key){\n          return [Error('Invalid column definition: property \"key\" is required')];\n        }\n        if(column.header === undefined){\n          column.header = column.key;\n        }\n        newcolumns.push(column);\n      }else {\n        return [Error('Invalid column definition: expect a string or an object')];\n      }\n    }\n    columns = newcolumns;\n  }\n  return [undefined, columns];\n};\n\nclass CsvError extends Error {\n  constructor(code, message, ...contexts) {\n    if(Array.isArray(message)) message = message.join(' ');\n    super(message);\n    if(Error.captureStackTrace !== undefined){\n      Error.captureStackTrace(this, CsvError);\n    }\n    this.code = code;\n    for(const context of contexts){\n      for(const key in context){\n        const value = context[key];\n        this[key] = isBuffer$1(value) ? value.toString() : value == null ? value : JSON.parse(JSON.stringify(value));\n      }\n    }\n  }\n}\n\nconst underscore = function(str){\n  return str.replace(/([A-Z])/g, function(_, match){\n    return '_' + match.toLowerCase();\n  });\n};\n\nconst normalize_options = function(opts) {\n  const options = {};\n  // Merge with user options\n  for(const opt in opts){\n    options[underscore(opt)] = opts[opt];\n  }\n  // Normalize option `bom`\n  if(options.bom === undefined || options.bom === null || options.bom === false){\n    options.bom = false;\n  }else if(options.bom !== true){\n    return [new CsvError('CSV_OPTION_BOOLEAN_INVALID_TYPE', [\n      'option `bom` is optional and must be a boolean value,',\n      `got ${JSON.stringify(options.bom)}`\n    ])];\n  }\n  // Normalize option `delimiter`\n  if(options.delimiter === undefined || options.delimiter === null){\n    options.delimiter = ',';\n  }else if(isBuffer$1(options.delimiter)){\n    options.delimiter = options.delimiter.toString();\n  }else if(typeof options.delimiter !== 'string'){\n    return [new CsvError('CSV_OPTION_DELIMITER_INVALID_TYPE', [\n      'option `delimiter` must be a buffer or a string,',\n      `got ${JSON.stringify(options.delimiter)}`\n    ])];\n  }\n  // Normalize option `quote`\n  if(options.quote === undefined || options.quote === null){\n    options.quote = '\"';\n  }else if(options.quote === true){\n    options.quote = '\"';\n  }else if(options.quote === false){\n    options.quote = '';\n  }else if (isBuffer$1(options.quote)){\n    options.quote = options.quote.toString();\n  }else if(typeof options.quote !== 'string'){\n    return [new CsvError('CSV_OPTION_QUOTE_INVALID_TYPE', [\n      'option `quote` must be a boolean, a buffer or a string,',\n      `got ${JSON.stringify(options.quote)}`\n    ])];\n  }\n  // Normalize option `quoted`\n  if(options.quoted === undefined || options.quoted === null){\n    options.quoted = false;\n  }\n  // Normalize option `quoted_empty`\n  if(options.quoted_empty === undefined || options.quoted_empty === null){\n    options.quoted_empty = undefined;\n  }\n  // Normalize option `quoted_match`\n  if(options.quoted_match === undefined || options.quoted_match === null || options.quoted_match === false){\n    options.quoted_match = null;\n  }else if(!Array.isArray(options.quoted_match)){\n    options.quoted_match = [options.quoted_match];\n  }\n  if(options.quoted_match){\n    for(const quoted_match of options.quoted_match){\n      const isString = typeof quoted_match === 'string';\n      const isRegExp = quoted_match instanceof RegExp;\n      if(!isString && !isRegExp){\n        return [Error(`Invalid Option: quoted_match must be a string or a regex, got ${JSON.stringify(quoted_match)}`)];\n      }\n    }\n  }\n  // Normalize option `quoted_string`\n  if(options.quoted_string === undefined || options.quoted_string === null){\n    options.quoted_string = false;\n  }\n  // Normalize option `eof`\n  if(options.eof === undefined || options.eof === null){\n    options.eof = true;\n  }\n  // Normalize option `escape`\n  if(options.escape === undefined || options.escape === null){\n    options.escape = '\"';\n  }else if(isBuffer$1(options.escape)){\n    options.escape = options.escape.toString();\n  }else if(typeof options.escape !== 'string'){\n    return [Error(`Invalid Option: escape must be a buffer or a string, got ${JSON.stringify(options.escape)}`)];\n  }\n  if (options.escape.length > 1){\n    return [Error(`Invalid Option: escape must be one character, got ${options.escape.length} characters`)];\n  }\n  // Normalize option `header`\n  if(options.header === undefined || options.header === null){\n    options.header = false;\n  }\n  // Normalize option `columns`\n  const [errColumns, columns] = normalize_columns(options.columns);\n  if(errColumns !== undefined) return [errColumns];\n  options.columns = columns;\n  // Normalize option `quoted`\n  if(options.quoted === undefined || options.quoted === null){\n    options.quoted = false;\n  }\n  // Normalize option `cast`\n  if(options.cast === undefined || options.cast === null){\n    options.cast = {};\n  }\n  // Normalize option cast.bigint\n  if(options.cast.bigint === undefined || options.cast.bigint === null){\n    // Cast boolean to string by default\n    options.cast.bigint = value => '' + value;\n  }\n  // Normalize option cast.boolean\n  if(options.cast.boolean === undefined || options.cast.boolean === null){\n    // Cast boolean to string by default\n    options.cast.boolean = value => value ? '1' : '';\n  }\n  // Normalize option cast.date\n  if(options.cast.date === undefined || options.cast.date === null){\n    // Cast date to timestamp string by default\n    options.cast.date = value => '' + value.getTime();\n  }\n  // Normalize option cast.number\n  if(options.cast.number === undefined || options.cast.number === null){\n    // Cast number to string using native casting by default\n    options.cast.number = value => '' + value;\n  }\n  // Normalize option cast.object\n  if(options.cast.object === undefined || options.cast.object === null){\n    // Stringify object as JSON by default\n    options.cast.object = value => JSON.stringify(value);\n  }\n  // Normalize option cast.string\n  if(options.cast.string === undefined || options.cast.string === null){\n    // Leave string untouched\n    options.cast.string = function(value){return value;};\n  }\n  // Normalize option `on_record`\n  if(options.on_record !== undefined && typeof options.on_record !== 'function'){\n    return [Error(`Invalid Option: \"on_record\" must be a function.`)];\n  }\n  // Normalize option `record_delimiter`\n  if(options.record_delimiter === undefined || options.record_delimiter === null){\n    options.record_delimiter = '\\n';\n  }else if(isBuffer$1(options.record_delimiter)){\n    options.record_delimiter = options.record_delimiter.toString();\n  }else if(typeof options.record_delimiter !== 'string'){\n    return [Error(`Invalid Option: record_delimiter must be a buffer or a string, got ${JSON.stringify(options.record_delimiter)}`)];\n  }\n  switch(options.record_delimiter){\n  case 'auto':\n    options.record_delimiter = null;\n    break;\n  case 'unix':\n    options.record_delimiter = \"\\n\";\n    break;\n  case 'mac':\n    options.record_delimiter = \"\\r\";\n    break;\n  case 'windows':\n    options.record_delimiter = \"\\r\\n\";\n    break;\n  case 'ascii':\n    options.record_delimiter = \"\\u001e\";\n    break;\n  case 'unicode':\n    options.record_delimiter = \"\\u2028\";\n    break;\n  }\n  return [undefined, options];\n};\n\nconst bom_utf8 = Buffer.from([239, 187, 191]);\n\nconst stringifier = function(options, state, info){\n  return {\n    options: options,\n    state: state,\n    info: info,\n    __transform: function(chunk, push){\n      // Chunk validation\n      if(!Array.isArray(chunk) && typeof chunk !== 'object'){\n        return Error(`Invalid Record: expect an array or an object, got ${JSON.stringify(chunk)}`);\n      }\n      // Detect columns from the first record\n      if(this.info.records === 0){\n        if(Array.isArray(chunk)){\n          if(this.options.header === true && this.options.columns === undefined){\n            return Error('Undiscoverable Columns: header option requires column option or object records');\n          }\n        }else if(this.options.columns === undefined){\n          const [err, columns] = normalize_columns(Object.keys(chunk));\n          if(err) return;\n          this.options.columns = columns;\n        }\n      }\n      // Emit the header\n      if(this.info.records === 0){\n        this.bom(push);\n        const err = this.headers(push);\n        if(err) return err;\n      }\n      // Emit and stringify the record if an object or an array\n      try{\n        // this.emit('record', chunk, this.info.records);\n        if(this.options.on_record){\n          this.options.on_record(chunk, this.info.records);\n        }\n      }catch(err){\n        return err;\n      }\n      // Convert the record into a string\n      let err, chunk_string;\n      if(this.options.eof){\n        [err, chunk_string] = this.stringify(chunk);\n        if(err) return err;\n        if(chunk_string === undefined){\n          return;\n        }else {\n          chunk_string = chunk_string + this.options.record_delimiter;\n        }\n      }else {\n        [err, chunk_string] = this.stringify(chunk);\n        if(err) return err;\n        if(chunk_string === undefined){\n          return;\n        }else {\n          if(this.options.header || this.info.records){\n            chunk_string = this.options.record_delimiter + chunk_string;\n          }\n        }\n      }\n      // Emit the csv\n      this.info.records++;\n      push(chunk_string);\n    },\n    stringify: function(chunk, chunkIsHeader=false){\n      if(typeof chunk !== 'object'){\n        return [undefined, chunk];\n      }\n      const {columns} = this.options;\n      const record = [];\n      // Record is an array\n      if(Array.isArray(chunk)){\n        // We are getting an array but the user has specified output columns. In\n        // this case, we respect the columns indexes\n        if(columns){\n          chunk.splice(columns.length);\n        }\n        // Cast record elements\n        for(let i=0; i<chunk.length; i++){\n          const field = chunk[i];\n          const [err, value] = this.__cast(field, {\n            index: i, column: i, records: this.info.records, header: chunkIsHeader\n          });\n          if(err) return [err];\n          record[i] = [value, field];\n        }\n      // Record is a literal object\n      // `columns` is always defined: it is either provided or discovered.\n      }else {\n        for(let i=0; i<columns.length; i++){\n          const field = get(chunk, columns[i].key);\n          const [err, value] = this.__cast(field, {\n            index: i, column: columns[i].key, records: this.info.records, header: chunkIsHeader\n          });\n          if(err) return [err];\n          record[i] = [value, field];\n        }\n      }\n      let csvrecord = '';\n      for(let i=0; i<record.length; i++){\n        let options, err;\n        // eslint-disable-next-line\n        let [value, field] = record[i];\n        if(typeof value === \"string\"){\n          options = this.options;\n        }else if(is_object(value)){\n          options = value;\n          value = options.value;\n          delete options.value;\n          if(typeof value !== \"string\" && value !== undefined && value !== null){\n            if(err) return [Error(`Invalid Casting Value: returned value must return a string, null or undefined, got ${JSON.stringify(value)}`)];\n          }\n          options = {...this.options, ...options};\n          [err, options] = normalize_options(options);\n          if(err !== undefined){\n            return [err];\n          }\n        }else if(value === undefined || value === null){\n          options = this.options;\n        }else {\n          return [Error(`Invalid Casting Value: returned value must return a string, an object, null or undefined, got ${JSON.stringify(value)}`)];\n        }\n        const {delimiter, escape, quote, quoted, quoted_empty, quoted_string, quoted_match, record_delimiter} = options;\n        if('' === value && '' === field){\n          let quotedMatch = quoted_match && quoted_match.filter(quoted_match => {\n            if(typeof quoted_match === 'string'){\n              return value.indexOf(quoted_match) !== -1;\n            }else {\n              return quoted_match.test(value);\n            }\n          });\n          quotedMatch = quotedMatch && quotedMatch.length > 0;\n          const shouldQuote = quotedMatch || true === quoted_empty ||\n            (true === quoted_string && false !== quoted_empty);\n          if(shouldQuote === true){\n            value = quote + value + quote;\n          }\n          csvrecord += value;\n        }else if(value){\n          if(typeof value !== 'string'){\n            return [Error(`Formatter must return a string, null or undefined, got ${JSON.stringify(value)}`)];\n          }\n          const containsdelimiter = delimiter.length && value.indexOf(delimiter) >= 0;\n          const containsQuote = (quote !== '') && value.indexOf(quote) >= 0;\n          const containsEscape = value.indexOf(escape) >= 0 && (escape !== quote);\n          const containsRecordDelimiter = value.indexOf(record_delimiter) >= 0;\n          const quotedString = quoted_string && typeof field === 'string';\n          let quotedMatch = quoted_match && quoted_match.filter(quoted_match => {\n            if(typeof quoted_match === 'string'){\n              return value.indexOf(quoted_match) !== -1;\n            }else {\n              return quoted_match.test(value);\n            }\n          });\n          quotedMatch = quotedMatch && quotedMatch.length > 0;\n          const shouldQuote = containsQuote === true || containsdelimiter || containsRecordDelimiter || quoted || quotedString || quotedMatch;\n          if(shouldQuote === true && containsEscape === true){\n            const regexp = escape === '\\\\'\n              ? new RegExp(escape + escape, 'g')\n              : new RegExp(escape, 'g');\n            value = value.replace(regexp, escape + escape);\n          }\n          if(containsQuote === true){\n            const regexp = new RegExp(quote,'g');\n            value = value.replace(regexp, escape + quote);\n          }\n          if(shouldQuote === true){\n            value = quote + value + quote;\n          }\n          csvrecord += value;\n        }else if(quoted_empty === true || (field === '' && quoted_string === true && quoted_empty !== false)){\n          csvrecord += quote + quote;\n        }\n        if(i !== record.length - 1){\n          csvrecord += delimiter;\n        }\n      }\n      return [undefined, csvrecord];\n    },\n    bom: function(push){\n      if(this.options.bom !== true){\n        return;\n      }\n      push(bom_utf8);\n    },\n    headers: function(push){\n      if(this.options.header === false){\n        return;\n      }\n      if(this.options.columns === undefined){\n        return;\n      }\n      let err;\n      let headers = this.options.columns.map(column => column.header);\n      if(this.options.eof){\n        [err, headers] = this.stringify(headers, true);\n        headers += this.options.record_delimiter;\n      }else {\n        [err, headers] = this.stringify(headers);\n      }\n      if(err) return err;\n      push(headers);\n    },\n    __cast: function(value, context){\n      const type = typeof value;\n      try{\n        if(type === 'string'){ // Fine for 99% of the cases\n          return [undefined, this.options.cast.string(value, context)];\n        }else if(type === 'bigint'){\n          return [undefined, this.options.cast.bigint(value, context)];\n        }else if(type === 'number'){\n          return [undefined, this.options.cast.number(value, context)];\n        }else if(type === 'boolean'){\n          return [undefined, this.options.cast.boolean(value, context)];\n        }else if(value instanceof Date){\n          return [undefined, this.options.cast.date(value, context)];\n        }else if(type === 'object' && value !== null){\n          return [undefined, this.options.cast.object(value, context)];\n        }else {\n          return [undefined, value, value];\n        }\n      }catch(err){\n        return [err];\n      }\n    }\n  };\n};\n\nconst stringify = function(records, opts={}){\n  const data = [];\n  const [err, options] = normalize_options(opts);\n  if(err !== undefined) throw err;\n  const state = {\n    stop: false\n  };\n  // Information\n  const info = {\n    records: 0\n  };\n  const api = stringifier(options, state, info);\n  for(const record of records){\n    const err = api.__transform(record, function(record){\n      data.push(record);\n    });\n    if(err !== undefined) throw err;\n  }\n  if(data.length === 0){\n    api.bom((d) => {\n      data.push(d);\n    });\n    const err = api.headers((headers) => {\n      data.push(headers);\n    });\n    if(err !== undefined) throw err;\n  }\n  return data.join('');\n};\n\nconst Transformer = function(options = {}, handler){\n  this.options = options;\n  if(options.consume === undefined || options.consume === null){\n    this.options.consume = false;\n  }\n  this.options.objectMode = true;\n  if(options.parallel === undefined || options.parallel === null){\n    this.options.parallel = 100;\n  }\n  if(options.params === undefined || options.params === null){\n    options.params = null;\n  }\n  this.handler = handler;\n  Stream.Transform.call(this, this.options);\n  this.state = {\n    running: 0,\n    started: 0,\n    finished: 0\n  };\n  return this;\n};\n\nutil.inherits(Transformer, Stream.Transform);\n\nTransformer.prototype._transform = function(chunk, encoding, cb){\n  this.state.started++;\n  this.state.running++;\n  if(this.state.running < this.options.parallel){\n    cb();\n    cb = null; // Cancel further callback execution\n  }\n  try {\n    let l = this.handler.length;\n    if(this.options.params !== null){  \n      l--;\n    }\n    if(l === 1){ // sync\n      this.__done(null, [this.handler.call(this, chunk, this.options.params)], cb);\n    }else if(l === 2){ // async\n      const callback = (err, ...chunks) =>\n        this.__done(err, chunks, cb);\n      this.handler.call(this, chunk, callback, this.options.params);\n    }else {\n      throw Error('Invalid handler arguments');\n    }\n    return false;\n  }\n  catch (err) {\n    this.__done(err);\n  }\n};\nTransformer.prototype._flush = function(cb){\n  if(this.state.running === 0){\n    cb();\n  }else {\n    this._ending = function(){\n      cb();\n    };\n  }\n};\nTransformer.prototype.__done = function(err, chunks, cb){\n  this.state.running--;\n  if(err){\n    return this.emit('error', err);\n  }\n  this.state.finished++;\n  for(let chunk of chunks){\n    if (typeof chunk === 'number'){\n      chunk = `${chunk}`;\n    }\n    // We dont push empty string\n    // See https://nodejs.org/api/stream.html#stream_readable_push\n    if(chunk !== undefined && chunk !== null && chunk !== ''){\n      this.push(chunk);\n    }\n  }\n  if(cb){\n    cb();\n  }\n  if(this._ending && this.state.running === 0){\n    this._ending();\n  }\n};\n\nconst transform = function(){\n  // Import arguments normalization\n  let handler, records;\n  let options = {};\n  for(const i in arguments){\n    const argument = arguments[i];\n    let type = typeof argument;\n    if(argument === null){\n      type = 'null';\n    }else if(type === 'object' && Array.isArray(argument)){\n      type = 'array';\n    }\n    if(type === 'array'){\n      records = argument;\n    }else if(type === 'object'){\n      options = {...argument};\n    }else if(type === 'function'){\n      handler = argument;\n    }else if(type !== 'null'){\n      throw new Error(`Invalid Arguments: got ${JSON.stringify(argument)} at position ${i}`);\n    }\n  }\n  // Validate arguments\n  let expected_handler_length = 1;\n  if(options.params){\n    expected_handler_length++;\n  }\n  if(handler.length > expected_handler_length){\n    throw Error('Invalid Handler: only synchonous handlers are supported');\n  }\n  // Start transformation\n  const chunks = [];\n  const transformer = new Transformer(options, handler);\n  transformer.push = function(chunk){\n    chunks.push(chunk);\n  };\n  for(const record of records){\n    transformer._transform(record, null, function(){});\n  }\n  return chunks;  \n};\n\nexport { generate, parse, stringify, transform };\n"],"names":["global$1","global","self","window","lookup","revLookup","Arr","Uint8Array","Array","inited","init","code","i","len","length","charCodeAt","encodeChunk","uint8","start","end","tmp","num","output","push","join","fromByteArray","extraBytes","parts","maxChunkLength","len2","read$1","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","write","value","c","rt","abs","isNaN","floor","log","LN2","toString","isArray$1","isArray","arr","call","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","prototype","arg","encodingOrOffset","this","Error","allocUnsafe","from","TypeError","ArrayBuffer","array","byteOffset","byteLength","undefined","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","slice","fromString","obj","internalIsBuffer","checked","copy","val","type","data","fromObject","assertSize","size","b","_isBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","bidirectionalIndexOf","dir","arrayIndexOf","indexOf","lastIndexOf","indexSize","arrLength","valLength","String","read","buf","readUInt16BE","foundIndex","found","j","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","poolSize","_augment","Symbol","species","alloc","fill","allocUnsafeSlow","isBuffer","isBuffer$1","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","arguments","equals","inspect","match","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","max","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","subarray","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","INVALID_BASE64_RE","leadSurrogate","b64","l","placeHolders","L","toByteArray","trim","replace","stringtrim","base64clean","src","dst","isFastBuffer","isSlowBuffer","constructor","EventHandlers","EventEmitter","$getMaxListeners","_maxListeners","defaultMaxListeners","emitNone","handler","isFn","listeners","arrayClone","emitOne","arg1","emitTwo","arg2","emitThree","arg3","emitMany","args","_addListener","listener","prepend","events","existing","_events","newListener","emit","_eventsCount","unshift","warned","w","name","emitter","count","console","warn","_onceWrap","fired","g","removeListener","listenerCount$1","evlistener","defaultSetTimout","defaultClearTimeout","Object","create","usingDomains","domain","active","getPrototypeOf","setMaxListeners","getMaxListeners","er","doError","error","err","context","domainEmitter","domainThrown","addListener","on","prependListener","once","prependOnceListener","position","originalListener","index","k","pop","spliceOne","removeAllListeners","key","keys","unwrapListeners","listenerCount","eventNames","Reflect","ownKeys","cachedSetTimeout","cachedClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","nextTick","Item","noop","off","performance","performanceNow","now","mozNow","msNow","oNow","webkitNow","Date","getTime","startTime","process","title","browser","env","argv","version","versions","binding","cwd","chdir","umask","hrtime","previousTimestamp","clocktime","seconds","nanoseconds","platform","release","config","uptime","inherits$1","ctor","superCtor","super_","enumerable","writable","configurable","TempCtor","formatRegExp","format","f","isString","objects","JSON","stringify","_","isNull","isObject","deprecate","fn","msg","isUndefined","noDeprecation","throwDeprecation","traceDeprecation","trace","debugEnviron","debugs","debuglog","NODE_DEBUG","toUpperCase","RegExp","test","opts","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styleType","style","styles","recurseTimes","isFunction","primitive","simple","isNumber","formatPrimitive","visibleKeys","hash","forEach","idx","arrayToHash","getOwnPropertyNames","isError","formatError","isRegExp","isDate","base","braces","toUTCString","hasOwnProperty","formatProperty","formatArray","map","reduce","prev","cur","reduceToSingleString","desc","getOwnPropertyDescriptor","get","split","line","ar","re","objectToString","o","pad","months","timestamp","time","getHours","getMinutes","getSeconds","getDate","getMonth","origin","add","prop","util","inherits","maybeBuf","isPrimitive","isSymbol","isNullOrUndefined","BufferList","head","tail","v","entry","next","shift","clear","p","isBufferEncoding","StringDecoder","assertEncoding","surrogateSize","detectIncompleteChar","utf16DetectIncompleteChar","base64DetectIncompleteChar","passThroughWrite","charBuffer","charReceived","charLength","charStr","available","charCode","substring","cr","enc","Readable","ReadableState","debug","options","stream","objectMode","Duplex","readableObjectMode","hwm","highWaterMark","defaultHwm","pipes","pipesCount","flowing","ended","endEmitted","reading","sync","needReadable","emittedReadable","readableListening","resumeScheduled","defaultEncoding","ranOut","awaitDrain","readingMore","decoder","_readableState","readable","_read","readableAddChunk","state","chunk","addToFront","chunkInvalid","emitReadable","onEofChunk","_e","skipAdd","maybeReadMore_","maybeReadMore","needMoreData","isPaused","setEncoding","MAX_HWM","howMuchToRead","computeNewHighWaterMark","emitReadable_","flow","nReadingNextTick","resume_","fromList","hasStrings","nb","copyFromBufferString","copyFromBuffer","fromListPartial","endReadable","endReadableNT","xs","nop","WriteReq","cb","callback","WritableState","defineProperty","getBuffer","writableObjectMode","needDrain","ending","finished","noDecode","decodeStrings","writing","corked","bufferProcessing","onwrite","_writableState","writecb","writelen","onwriteStateUpdate","pendingcb","errorEmitted","onwriteError","needFinish","bufferedRequest","clearBuffer","afterWrite","lastBufferedRequest","prefinished","bufferedRequestCount","corkedRequestsFree","CorkedRequest","Writable","_write","writev","_writev","doWrite","onwriteDrain","finishMaybe","holder","finish","prefinish","need","_this","nOrig","doRead","pipe","dest","pipeOpts","endFn","onend","cleanup","onunpipe","ondrain","pipeOnDrain","cleanedUp","onclose","onfinish","onerror","ondata","increasedAwaitDrain","pause","unpipe","event","resume","dests","_i","splice","ev","wrap","paused","method","bind","_fromList","current","writeAfterEnd","valid","validChunk","decodeChunk","last","writeOrBuffer","cork","uncork","setDefaultEncoding","endWritable","allowHalfOpen","onEndNT","TransformState","afterTransform","ts","_transformState","transforming","writechunk","rs","needTransform","writeencoding","Transform","transform","_transform","flush","_flush","done","ws","PassThrough","Stream","source","_isStdio","didOnEnd","destroy","random","seed","PI","types","ascii","column","nb_chars","ceil","maxWordLength","char","int","bool","Generator","high_water_mark","object_mode","dft","columns","delimiter","duration","eof","fixedSize","rowDelimiter","sleep","accepted_header_types","filter","t","normalize_options$2","start_time","fixed_size_buffer","count_written","count_created","init_state$1","close","record","recordLength","result","__push","CsvError$1","message","contexts","super","captureStackTrace","parse","normalize_columns_array","normalizedColumns","disabled","ResizeableBuffer","resize","clone","append","reset","init_state","bomSkipped","bufBytesStart","castField","cast_function","commenting","enabled","from_line","escaping","escapeIsQuote","escape","quote","expectedRecordLength","field","firstLineToHeaders","cast_first_line_to_header","needMoreDataSize","comment","previousBuf","quoting","stop","rawBuffer","recordHasError","record_length","recordDelimiterMaxLength","record_delimiter","trimChars","wasQuoting","wasRowDelimiter","timchars","normalize_options$1","opt","bom","cast","cast_date","date","group_columns_by_name","delimiter_json","isInteger","ignore_last_delimiters","info","max_record_size","objname","on_record","raw","rd","relax_column_count","relax_column_count_less","relax_column_count_more","relax_quotes","skip_empty_lines","skip_records_with_empty_values","skip_records_with_error","rtrim","ltrim","to","to_line","isRecordEmpty","every","boms","records","parser","original_options","comment_lines","empty_lines","invalid_field_length","lines","__needMoreData","bufLen","nextBuf","bomLength","__autoDiscoverRecordDelimiter","chr","__isEscape","__isQuote","nextChr","isNextChrTrimable","__isCharTrimable","isNextChrComment","__compareBytes","isNextChrDelimiter","__isDelimiter","isNextChrRecordDelimiter","__isRecordDelimiter","__error","__infoField","Boolean","recordDelimiterLength","__resetField","__resetRecord","errField","__onField","errRecord","__onRecord","delimiterLength","lappend","rappend","__firstLineToColumns","finalErr","extRecord","assign","__infoRecord","headers","normalizedHeaders","trimRight","__cast","__isFloat","parseFloat","loop1","timchar","isTrim","sourceBuf","targetBuf","targetPos","sourceLength","del","rdLength","rds","loop","on_skip","__infoDataSet","header","isColumns","transform$1","err1","err2","CsvError","Transformer","consume","parallel","params","running","started","__done","chunks","_ending","argument","expected_handler_length","transformer"],"sourceRoot":""}